{"version":3,"sources":["./src/app/services/navigation.service.ts","./src/app/sites/assistance/record-new-use/table-data.service.ts","./src/app/sites/assistance/record-new-use/paast-bons.service.ts","./src/app/sites/Requests/post.service.ts","./src/app/sites/customer/hour-sheets-current-month/toasts.service.ts","./src/app/components/header/header.component.html","./src/app/components/header/header.component.ts","./src/app/services/dbdata-bon-credit.service.ts","./src/app/sites/customer/passtbons-archive/passtbons-archive.component.ts","./src/app/sites/customer/passtbons-archive/passtbons-archive.component.html","./src/app/services/auth.interceptor.ts","./src/app/components/side-nav-subpages/side-nav-subpages.component.html","./src/app/components/side-nav-subpages/side-nav-subpages.component.ts","./src/environments/environment.ts","./src/app/sites/assistance/record-new-use/prove-time.service.ts","./src/app/components/search-field/search-field.component.ts","./src/app/components/search-field/search-field.component.html","./src/app/services/time-service.service.ts","./src/app/sites/generally/login/login.component.ts","./src/app/sites/generally/login/login.component.html","./src/app/components/select-field/select-field.component.ts","./src/app/components/select-field/select-field.component.html","./src/app/components/basic-button/basic-button.component.ts","./src/app/components/basic-button/basic-button.component.html","./src/app/sites/assistance/record-new-use/customers.service.ts","./src/app/components/header/topbarInhale.ts","./src/app/components/tabs-module/tabs-module.component.html","./src/app/components/tabs-module/tabs-module.component.ts","./src/app/sites/customer/hour-sheets-archive/form-data.service.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/sites/assistance/record-new-use/choose-activitiys.service.ts","./src/app/sites/customer/hour-sheets-current-month/form-data.service.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/sites/customer/confirm-use/confirm-use.component.ts","./src/app/sites/customer/confirm-use/confirm-use.component.html","./src/app/components/side-nav/side-nav.component.ts","./src/app/components/side-nav/side-nav.component.html","./src/app/components/time-picker/time-picker.component.ts","./src/app/components/time-picker/time-picker.component.html","./src/app/services/custom-date-adapter.service.ts","./src/app/sites/customer/passtbons/passtbons.component.ts","./src/app/sites/customer/passtbons/passtbons.component.html","./src/app/sites/generally/home/home.component.html","./src/app/sites/generally/home/home.component.ts","./src/app/app.module.ts","./src/app/sites/assistance/record-new-use/popup-table/popup-table.component.ts","./src/app/sites/assistance/record-new-use/popup-table/popup-table.component.html","./src/app/sites/generally/user-settings/user-settings.component.html","./src/app/sites/generally/user-settings/user-settings.component.ts","./src/app/sites/Requests/get.service.ts","./src/app/sites/customer/curr-grant/curr-grant.component.ts","./src/app/sites/customer/curr-grant/curr-grant.component.html","./src/app/services/color-elements.service.ts","./src/app/components/title/title.component.ts","./src/app/components/title/title.component.html","./src/app/sites/assistance/record-new-use/toasts.service.ts","./src/app/components/ngx-table/ngx-table.component.ts","./src/app/components/ngx-table/ngx-table.component.html","./src/app/services/auth.service.ts","./src/app/components/date-picker/date-picker.component.ts","./src/app/components/date-picker/date-picker.component.html","./src/app/sites/assistance/record-new-use/record-new-use.component.ts","./src/app/sites/assistance/record-new-use/record-new-use.component.html","./src/app/sites/customer/hour-sheets-archive/hour-sheets-archive.component.ts","./src/app/sites/customer/hour-sheets-archive/hour-sheets-archive.component.html","./src/app/sites/customer/hour-sheets-archive/hour-sheetsdetail.service.ts","./src/app/sites/customer/hour-sheets-archive/toasts.service.ts","./src/app/sites/customer/hour-sheets-current-month/hour-sheetsdetail.service.ts","./src/app/services/route-to.service.ts","./src/app/sites/assistance/record-new-use/participate.service.ts","./src/app/components/side-nav/side-nav-direction.ts","./src/app/app-routing.module.ts","./src/app/sites/customer/hour-sheets-current-month/hour-sheets-current-month.component.ts","./src/app/sites/customer/hour-sheets-current-month/hour-sheets-current-month.component.html","./src/app/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","./src/app/components/ngx-date-time-picker/ngx-date-time-picker.component.html","./src/app/services/generate-excel.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"main.js","sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService implements OnInit {\n\n  private showNav$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  \n  constructor() { }\n\n\n  ngOnInit() {\n\n  }\n\n  getShowNav() {\n    return this.showNav$.asObservable();\n  }\n\n  setShowNav(showHide: boolean) {\n    this.showNav$.next(showHide);\n  }\n\n  toggleNavState() {\n    this.showNav$.next(!this.showNav$.value);\n    \n  }\n\n  isNavOpen() {\n    return this.showNav$.value;\n  }\n\n    \n  \n}","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { IfirstRequest, ITableData } from '../../../interfaces/IAssignment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableDataService {\n\n  @Output() refreshTable: EventEmitter<any> = new EventEmitter();\n\n  public getNormHours: string;\n  public getNightHours: string;\n  public getNormTarif: string;\n  public getNightTarif: string;\n\n  constructor() { }\n\n  public tableInhale: string[] = ['hours', 'definition', 'costs'];\n\n  roleId = window.localStorage.getItem('roleId');\n\n  normTariff: number = 0;\n  nightTariff: number = 0;//parseFloat(\"0\").toFixed(2);\n  weekendTariff: number = 0;\n  totalTariff: number = 0;\n\n  hourNorm: number = 0;\n  hourNight: number = 0;\n  hourTotal: number = 0;\n\n  tableContent = [];\n\n  public setData: ITableData[] = [\n    { hours: \"12\", definition: 'Tarif Normal', costs: this.normTariff + \"€\" },\n    { hours: \"11\", definition: 'Tarif Nacht', costs: this.nightTariff + \"€\" },\n    { hours: \"0\", definition: 'Gesamt' + ' ', costs: this.totalTariff + \"€\" },\n\n  ];\n\n  getData(firstRequest: IfirstRequest) {\n    this.setData = [];\n\n    var hours = 0;\n    var costs = 0;\n\n    var counterFirst=0;\n    var counterSeccond=0;\n\n    var bothDone=0;\n\n    //builds the table with the values from the database\n    firstRequest.costs.forEach(data => {\n      switch (data.name) {\n        case \"N\": this.setData.push({ hours: data.hours.toString(), definition: 'Normal', costs: this.round2Commas(data.customerCost).toString() + \"€\" }); break;\n        case \"Ni\": this.setData.push({ hours: data.hours.toString(), definition: 'Nacht', costs: this.round2Commas(data.customerCost).toString() + \"€\" }); break;\n        case \"We\": this.setData.push({ hours: data.hours.toString(), definition: 'Wochenende', costs: this.round2Commas(data.customerCost).toString() + \"€\" }); break;\n        case \"VoucherA\": this.setData.push({ hours: data.hours.toString(), definition: 'Tarif A', costs: this.round2Commas(data.customerCost).toString() + \"€\" }); break;\n        case \"VoucherB\": this.setData.push({ hours: data.hours.toString(), definition: 'Tarif B', costs: this.round2Commas(data.customerCost).toString() + \"€\" }); break;\n      }\n      counterFirst++;\n      if(firstRequest.costs.length==counterFirst){\n        bothDone++;\n      }\n    })\n\n    firstRequest.costs.forEach(data => {\n      hours = hours + data.hours;\n      costs = costs + data.customerCost;\n\n      counterSeccond++;\n      if(firstRequest.costs.length==counterSeccond){\n        bothDone++;\n      }\n    })\n\n    this.setData.push({ hours: hours.toString(), definition: 'Gesamt', costs: this.round2Commas(costs).toString() + \"€\" })\n\n    this.totalTariff = this.normTariff + this.nightTariff;\n    this.hourTotal = this.hourNorm + this.hourNight;\n\n    if(bothDone==2){\n      this.refreshTable.emit(this.setData);\n    }\n      \n  }\n\n  round2Commas(input) {\n    var reminder = input.toFixed(2);\n    var back = Number(reminder);\n    return back;\n  }\n}\n\n\n\n\n\n","import { GetService } from './../../Requests/get.service';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IValue } from '../../../interfaces/IAssignment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaastBonsService {\n\n  apiUrl = environment.apiUrl;\n\n  //  paastBons: string[] = ['Leistungsbon einlösen', 'Selbstzahler'];\n  // paastBons: string[] = [];\n  paastBons: IValue[] = [];\n\n\n  constructor(private getService: GetService) { }\n\n  getPaastBons() {\n    this.paastBons = [];\n    this.getService.getPasstBonsRecordNewUse()\n      .toPromise()\n      .then(data => {\n        data.value.forEach(element => {\n          this.paastBons.push(element);\n        }),\n          error => {\n            console.log(error);\n          };\n      });\n    return this.paastBons;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private http: HttpClient) { }\n\n  apiUrl = environment.apiUrl;\n\n  //#region customer\n\n\n  //#endregion\n\n  //#region assistance\n\n  checkInputForTableRecordNewUse(assistantid: number, pataskid: number, paymentmethodid: number, passttaskid: number, startTime: string, endTime: string) {\n    return this.http.post(this.apiUrl + '/assignment/calculate', {\n      assistantid: assistantid, pataskid: pataskid, paymentmethodid: paymentmethodid,\n      passttaskid: passttaskid == 0 ? null : passttaskid, from: startTime, to: endTime\n    });\n  }\n\n  pushInputRecordNewUse(firstRequest:any) {\n   return this.http.post<string>(this.apiUrl + '/assignment/confirm', firstRequest['id'])\n  }\n\n  //#endregion\n\n  //#region service Point\n\n\n  //#endregion\n\n  //#region IVA\n\n\n  //#endregion  \n\n  //#region generally\n\n  login(user:string, pw:string){\n  return  this.http.post(this.apiUrl+'/authorization', { username: user, password: pw })\n  }  \n\n  //#endregion\n}\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport {  ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastsService {\n\n  constructor(private toastr: ToastrService) { }\n\n\n  noRowSelected(){\n    this.toastr.error(\"Bitte wählen Sie mindestens eine Zeile aus für den Download.\")\n  }\n  \n}\n","<mat-toolbar class=\"topToolbar\">\n    <img id=\"logoSmall\" (click)=\"closeWindow()\" alt=\"\">\n    <img id=\"logoBig\" (click)=\"closeWindow()\" alt=\"\">\n    <button attr.aria-label=\"Herzlich Willkommen {{fullName}} bei der Passt Digitalisierung. Zurück zur PA-Vorarlberg Startseite.\"(click)=\"closeWindow()\" id=\"hiddenButton\"></button>\n    <mat-toolbar class=\"topBarItems\">\n\n\n        <div  *ngFor=\"let button of buttons\" class=\"headerElements\">\n            <button [attr.aria-label]=\"'Link ' +button.name\" (click)=\"handleClick(button)\" class=\"headerButtons\" id={{button.id}}>\n                {{button.name}}\n            </button>\n        </div>\n        <div class=\"headerLogout\">\n            <img src=\"{{iconLockSrc}}\" alt=\"\" id=\"iconLock\" >\n            <button [attr.aria-label]=\"'Abmelden'\" class=\"headerButtons\" (click)=\"handleClick({click:'login'})\" style=\"margin-left: 20px;\">{{loginLogout}}\n            </button>\n        </div>\n        <img src=\"{{iconLockSrc}}\" alt=\"\" id=\"iconLock2\" >\n        <span id=\"hamburger\" (click)=\"toggleSideNav()\" class=\"menu-icon material-icons\">menu</span>\n    </mat-toolbar>\n</mat-toolbar>\n\n\n<!-- placeholder for the fixed topbar that it doesnt swollow the next content -->\n<div class=\"placeholder\">\n    <h1></h1>\n</div>","//import { ColorElementsService } from '../../services/color-elements.service';\nimport { AuthService } from './../../services/auth.service';\nimport { RouteToService } from './../../services/route-to.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NavigationService } from 'src/app/services/navigation.service';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HeaderComponent implements OnInit {\n\n  public buttons: Object;\n\n  loginLogout: string = \"Abmelden\";\n\n  iconLockSrc: string = \"./../../../assets/icons/lock.svg\";\n\n  constructor(private navService: NavigationService,\n    private routeToService: RouteToService,\n    // private colorService: ColorElementsService,\n    auth: AuthService) {\n    auth.getButtons.subscribe(but => {\n      this.proveButtons(but);\n    });\n\n  }\n\n  fullName: string = window.localStorage.getItem('fullName');\n\n  roleId = localStorage.getItem('roleId');\n  ngOnInit(): void {\n    this.refresh();//for the refresh and the first init from the page\n  }\n\n  /* makes the side nav visible */\n  toggleSideNav() {\n    this.navService.setShowNav(true);\n  }\n\n  // gets the handle Click event from the iterated buttons in the ngFor from the html and sends it to the routeToService\n  // also change color of the element wich is clicked\n\n  handleClick(method: any) {\n    /* if (method.click != \"login\") {\n      this.colorService.handleClickHeader(method);\n    }\n */\n    this.routeToService.handleClick(method.click);  //pick the current side!!!!\n  }\n\n  /* opens the main side from pa and closes the actual side on click with the icon */\n  closeWindow() {\n    window.open('https://www.pa-vorarlberg.at', '_self').close();\n  }\n\n  //emits the change in the auth service to toggle the items in the header in the routToService component with the diffenent arrays\n  proveButtons(but) {\n    if (but == \"getToken\") {\n      this.iconLockSrc = \"./../../../assets/icons/lock.svg\";\n      this.loginLogout = \"Abmelden\";\n    }\n\n    if (but == \"noToken\") {\n      this.iconLockSrc = \"\";\n      this.loginLogout = \"\";\n    }\n    this.buttons = this.routeToService.buttons;\n  }\n  refresh() {\n    this.buttons = this.routeToService.buttons;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DBdataBonCreditService {\n  // private apiUrl = environment.apiUrl;\n  \n  // constructor(private httpClient: HttpClient) { }\n    \n  // loadData() {\n  //   return this.httpClient.get(apiUrl+ \"wasauchimmer\", {\n  //     headers: {\n  //       Authorization: \"Bearer \" + window.localStorage.getItem(\"jwt\")\n  //     }\n  //       });\n  //     }\n    \n  // \n  \n}\n","import { GetService } from './../../Requests/get.service';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-passtbons-archive',\n  templateUrl: './passtbons-archive.component.html',\n  styleUrls: ['./passtbons-archive.component.scss']\n})\nexport class PASSTBonsArchiveComponent implements OnInit {\n  // variables for side-nav\n  subpageNavItems : string [] = [\"Guthaben\", \"Bon Archiv\"]; /* , \"Aktuelle Bewilligung\" */\n  subpageNavRoutes : string [] = [\"/PASSTBonsGuthaben\", \"/PASSTBonsArchiv\"]; /* , \"/AktuelleBewilligung\" */\n  //grid\n\n  /* columnDefs = [\n    { field: 'make', sortable: true, checkboxSelection: true }, //, rowGroup: true für das grupieren der einzellnen zeileninhalte\n    { field: 'model', sortable: true },\n    { field: 'price', sortable: true }\n  ];  */ \n\n  columnDefs = [\n    { field: 'Monat', sortable: true, }, \n    { field: 'TarifA', sortable: true },\n    { field: 'TarifB', sortable: true }\n  ];\n\n // rowData: any;\n\n  rowData = [\n    { Monat:\"Jänner 2021\", TarifA:20, TarifB:15 },\n    { Monat:\"Dezember 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"November 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"Oktober 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"September 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"August 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"Juli 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"Juni 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"Mai 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"April 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"März 2020\", TarifA:20, TarifB:15 },\n    { Monat:\"Februar 2020\", TarifA:20, TarifB:15 },\n\n  ];\n\n \n  constructor(private getService: GetService) { }\n\n  ngOnInit(): void {\n    //this.rowData = this.http.get('/test/small-row-data.json');\n    //this.rowData = this.http.get('/corsApi/someAPI');\n  }\n\n  /*   getSelectedRows() {\n      const selectedNodes = this.agGrid.api.getSelectedNodes();\n      const selectedData = selectedNodes.map(node => node.data);\n      const selectedDataStringPresentation = selectedData.map(node => node.make + ' ' + node.model + ' ' + node.price + '€').join(', ');\n  \n      //npm install --save ag-grid-enterprise für die daten falls man sie kopieren will\n      console.log(`Selected nodes: ${selectedDataStringPresentation}`); */\n\n\n  /* getSelectedRows() {\n\n    const selectedNodes = this.agGrid.api.getSelectedNodes();\n    const selectedData = selectedNodes.map(node => node.data);\n    const selectedDataStringPresentation = selectedData.map(node =>\n      node.Assistentin + ' ' +\n      node.N + ' ' +\n      node.WE + ' ' +\n      node.NA + ' ' +\n      node.NP1 + ' ' +\n      node.NP2 + ' ' +\n      node.BonA + ' ' +\n      node.BonB + ' ' +\n      node.Betrag + ' ' +\n      node.Status + ' '\n    ).join(', ');\n    alert(`Selected nodes: ${selectedDataStringPresentation}`); \n  } */\n}\n\n\n ","<app-title [blueText]=\"'Übersicht'\" [greyText]=\"'eingelöste PASST Leistungsbons'\"></app-title>\n\n<div class=\"main-container\">\n    <app-tabs-module [getContent]=\"subpageNavItems\" [getLinks]=\"subpageNavRoutes\"></app-tabs-module>\n</div>\n\n<div class=\"container-wrapper\">\n    <div class=\"table\">\n\n        <app-ngx-table [setArrow]=\"true\" [setCheckbox]=\"true\" [searchOff]=\"false\" [startLimit]=\"2\" [endLimit]=\"20\">\n        </app-ngx-table>\n    </div>\n    <!-- \n [setSelectionType]=\"setSelectionType\"  \n [setColumns]=\"setColumns\" \n    [setRowDetails]=\"setRowDetails\"\n    (rowSelect)=\"getRowClicked($event)\" \n     [setRows]=\"setRows()\"\n    -->\n\n    <!-- <app-side-nav-subpages [data] = \"subpageNavItems\" [route] = \"subpageNavRoutes\"></app-side-nav-subpages> -->\n    <!--  <div class = \"table\"> \n        <div class=\"wrapper\">\n            <ag-grid-angular\n            style=\"width: 2000px; height: 500px;\"\n            class=\"ag-theme-alpine\"\n            [rowData]=\"rowData\"\n            [columnDefs]=\"columnDefs\"></ag-grid-angular> -->\n\n    <!-- <ag-grid-angular\n            #agGrid\n      \n            style=\"width: 1500px; height: 500px;\"\n            class=\"ag-theme-alpine\"\n            [rowData]=\"rowData | async\"\n            [columnDefs]=\"columnDefs\"\n        \n        \n        >\n        </ag-grid-angular> rowSelection=\"multiple\" für multible auswahl der zeilen -->\n\n\n    <!--  </div> -->\n</div>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>,\n        next: HttpHandler): Observable<HttpEvent<any>> {\n        const jwtToken = localStorage.getItem('jwtToken');\n\n        if (jwtToken) {\n            const cloned = req.clone({   //need to clone it, becouse i cannot take it a rewort with it\n                headers: req.headers.set('Authorization',\n                    jwtToken) //clone the header from the req and set it with the bearer and the jwtToken 'Bearer ' + \n            });\n            return next.handle(cloned);\n        }\n        else {\n            return next.handle(req);\n        }\n    }\n}\n\n/* ): Observable<HttpEvent<any>> {\n    const ct = req.detectContentTypeHeader();\n    return ct != null && ct.startsWith('text/plain')\n        ? next.handle(req.clone({\n                setHeaders: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(req.body)\n            }))\n        : next.handle(req);\n  } */","<div class = \"subpages-container\">\n        <a class = \"subpage \" id=\"subpage1\" routerLink ='{{route[0]}}' routerLinkActive=\"active\" >{{data[0]}}</a>\n        <a class = \"subpage {{subpAmount3}}\" id=\"subpage2\" routerLink = '{{route[1]}}'routerLinkActive=\"active\"   >{{data[1]}}</a>\n        <a *ngIf= \"subpAmount3\" class = \"subpage\" id=\"subpage3\" routerLink = '{{route[2]}}' routerLinkActive=\"active\"  >{{data[2]}}</a>\n\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core'; \n\n\n@Component({\n  selector: 'app-side-nav-subpages',\n  templateUrl: './side-nav-subpages.component.html',\n  styleUrls: ['./side-nav-subpages.component.scss']\n})\nexport class SideNavSubpagesComponent implements OnInit {\n  @Input() data : string[]; \n  subpAmount3 : boolean = false;\n  @Input() route : string[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.setSubpAmount();     \n\n  }\n\n  setSubpAmount(){\n    if(this.data.length > 2){\n      this.subpAmount3= true;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false, \n  apiUrl: '/corsApi'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ToastsService } from './toasts.service';\nimport { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProveTimeService {\n\n  constructor(private toastsService: ToastsService) { }\n\n  //prove the validity of the input time\n  checkInputTime(datePickFirstDate, datePickerSeccondDate) { //, pickStartTime, pickEndTime\n    //prove start date\n    if (moment(datePickFirstDate).isValid() == false) { //datePickFirstDate, dateFormat\n      this.toastsService.noStartDate();\n      return false;\n    }\n\n    //prove end date\n    if (moment(datePickerSeccondDate).isValid() == false) { //, dateFormat\n      this.toastsService.noEndDate();\n      return false;\n    }\n\n    //prove the input start date with input end date with other day\n    if (moment(datePickFirstDate, \"DD-MM-YYYY\").isAfter(moment(datePickerSeccondDate, \"DD-MM-YYYY\"))) {\n      this.toastsService.startDateLargerEndDate();\n      return false;\n    }\n\n    //prove the next day if starttime is smaller than end time and start date is the same as the end date\n      if (!(moment(datePickerSeccondDate, \"DD-MM-YYYY-HH-MM\").isAfter(moment(datePickFirstDate, \"DD-MM-YYYY-HH-MM\")))) {\n        this.toastsService.noEndDate();\n        return false;\n      }\n\n    //prove if the end day is more than two days forward the start day\n    if (moment(datePickerSeccondDate, \"DD-MM-YYYY\").diff(moment(datePickFirstDate, \"DD-MM-YYYY\"), 'days') > 2) {\n      this.toastsService.seccondDateToFarInTheFuture();\n      return false;\n    }\n\n    //prove if the \n    if (moment(datePickerSeccondDate, \"DD-MM-YYYY-HH-MM\").diff(moment(datePickFirstDate, \"DD-MM-YYYY-HH-MM\"), 'minutes')<=0) {\n      this.toastsService.startEndTimeSame();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-search-field',\n  templateUrl: './search-field.component.html',\n  styleUrls: ['./search-field.component.scss']\n})\nexport class SearchFieldComponent implements OnInit {\n\n  @Input() inputOutline: string = \"outline\";\n\n  @Input() disabled: boolean;  //disabled the field\n\n  @Input() textCenter: boolean = false; //set the text to center\n\n  @Input() inputLabel: string = \"Suche (Eingabe)\"; //set the default Label if field is empty\n\n  @Input() set colorSelect(color:string){\n    switch(color){\n      case 'white' : this.inputClass=\"inputWhite\";  break;\n      default : this.inputClass=\"inputDefault\";  break;\n    }\n  };\n\n  @Output() getItem: EventEmitter<string> = new EventEmitter();\n\n  constructor() { }\n\n  inputClass:string=\"inputDefault\"; //default inherit in scss\n\n  ngOnInit(): void {\n\n  }\n\n  setValue(getValue) {\n    this.getItem.emit(getValue.target.value); //set the complete word to the getItem output\n  }\n\n}\n","<!-- textAlign left -->\n  <div  *ngIf=\"!textCenter; else textRight\">\n     <form  class=\"selectorDropdowne\"  >\n    <mat-form-field  class=\"wrapperField\" appearance=\"{{inputOutline}}\">\n      <mat-label class=\"fieldShow\">{{inputLabel}}</mat-label><!--  -->\n      <input class=\"fieldShow\" matInput (keyup)=\"setValue($event)\" ><!-- (keyup)=\"updateFilter($event)\" -->\n    </mat-form-field>\n  </form>\n  </div>\n \n  <ng-template  #textRight>\n    <form  class=\"selectorDropdowne\"  >\n    <mat-form-field  style=\"text-align: center;\" class=\"wrapperField\" appearance=\"{{inputOutline}}\">\n      <mat-label style=\"text-align: center;\" class=\"fieldShow\">{{inputLabel}}</mat-label><!--  -->\n      <input style=\"text-align: center;\" class=\"fieldShow\" matInput (keyup)=\"setValue($event)\" ><!-- (keyup)=\"updateFilter($event)\" -->\n    </mat-form-field>\n  </form>\n  </ng-template>\n  \n \n","import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeServiceService {\n\n  constructor() { }\n\n  /**\n   * needs date and time to form it to a iso string\n   * @param date \n   * @param time \n   * @returns iso String with current Timezone\n   */\n  dateToIsoString(date, time) {\n\n    console.log(\"date\",date);\n    console.log(\"time\",time);\n    \n\n    let momentDate = moment(date);\n    let momentTime = moment(time, 'HH:mm');\n\n    momentDate.set({\n      hour: momentTime.get('hour'),\n      minute: momentTime.get('minute'),\n      second: momentTime.get('second')\n    });\n    return momentDate.toISOString(true); //keep offset to isoString to true\n  }\n\n  /**\n   * return the date string with a iso String\n   * @param dateTime \n   * @returns iso String with current Timezone\n   */\n  dateTimeToIsoString(dateTime) {\n    let momentDate = moment(dateTime);\n    return momentDate.toISOString(true); //keep offset to isoString to true\n  }\n\n  getActualDate() {\n    var actualDate = new Date();\n    var dateTimeString = moment(actualDate).format(\"DD/MM/YYYY-HH/mm/ss\");\n    return dateTimeString;\n  }\n\n  replaceSigns(getString, getSign, replaceSign) {\n    return getString.split(getSign).join(replaceSign);;\n  }\n\n  convertEnglishTime(getTime,getYear) {\n    //splits the get Time string in an array\n    var splitter = getTime.split(\"-\");\n    var year = splitter[0];\n    var month = splitter[1];\n    var germanMonths = [\"Jänner\", \"Februar\", \"März\", \"April\", \"Mai\",\"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"];\n    var returnGermanMonth:string;\n   \n    switch(month){\n      case \"January\": returnGermanMonth=germanMonths[0]; break;\n      case \"February\":returnGermanMonth=germanMonths[1]; break;\n      case \"March\": returnGermanMonth=germanMonths[2];break;\n      case \"April\":returnGermanMonth=germanMonths[3]; break;\n      case \"May\":returnGermanMonth=germanMonths[4]; break;\n      case \"June\": returnGermanMonth=germanMonths[5];break;\n      case \"July\": returnGermanMonth=germanMonths[6];break;\n      case \"August\":returnGermanMonth=germanMonths[7]; break;\n      case \"September\": returnGermanMonth=germanMonths[8];break;\n      case \"October\":returnGermanMonth=germanMonths[9]; break;\n      case \"November\": returnGermanMonth=germanMonths[10];break;\n      case \"December\": returnGermanMonth=germanMonths[11];break;\n    }\n    if(getYear){\n      return year;\n    }\n      return returnGermanMonth;    \n  }\n}\n","import { PostService } from './../../Requests/post.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  apiUrl = environment.apiUrl;\n  loginForm: FormGroup;\n  //Eingaben für Button - inputs in Child-Component\n  btnText: string = 'Anmelden' \n  btnColor: string = 'colorGreen'\n  btnDisabled: boolean = false;\n  \n  \n  //smallScreen = false;\n  messageToUser = '';\n  constructor(private authService: AuthService,\n    private postService: PostService,\n    private toastr:ToastrService,\n  ) {  }\n  ngOnInit(): void {\n    localStorage.clear();\n    this.authService.checkJWT();  //to prove the token and builds the header components buttons\n    this.checkLoginForm();\n    \n  }\n  checkLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.minLength(2)]), //to prove the length of the input string from the user\n      password: new FormControl('', [Validators.required, Validators.minLength(4)])\n    });\n  }\n  login(user: any, pw: any) {\n\n    //https://angular-doc.ru/guide/deployment=> for look for the cors issues\n    this.postService.login(user, pw) //=>json placeholder google //\"https://jsonplaceholder.typicode.com/posts\"\n      .subscribe((data) => {\n        this.authService.jwtToken = data['jwtToken'];\n        this.authService.roleId=data['roleId'];\n        this.authService.username=data['userName'];\n        this.authService.userId=data['userId'];\n        this.authService.fullname=data['fullName'];\n        window.localStorage.setItem(\"jwtToken\", this.authService.jwtToken); //=> to put a memory of the jwt token in Application/Local Storage \n        window.localStorage.setItem(\"roleId\", this.authService.roleId); //=> to put a memory of the jwt token in Application/Local Storage \n        window.localStorage.setItem(\"userName\", this.authService.username);\n        window.localStorage.setItem(\"userId\", this.authService.userId);\n        window.localStorage.setItem(\"fullName\", this.authService.fullname);\n        this.authService.checkJWT();\n      },\n        error => {\n          this.proveError(error.status);\n        });\n\n  }\n  proveError(error) {\n    if (error >= 400) { //401 equals to no gültigkeit\n      this.toastr.error(\"Bitte überprüfen sie ihre Login Daten.\");\n    }\n  }\n\n  setBtnDisabled(){\n   if(this.loginForm.get('password').errors?.required){\n     return true;\n   }\n  }\n}\n","<!-- <div class=\"start-wrapper\"> -->\n  <!--   <h1 class=\"title\">\n        <p  class=\"BloggerSansBoldBlue\">Persönliche Assistenz -</p>\n        <p class=\"BloggerSansBoldGrey\">&#160;einfach erfasst!</p>\n    </h1> -->\n        <app-title [blueText]=\"'Persönliche Assistenz-'\" [greyText]=\"'einfach erfasst!'\"></app-title>\n\n   <div class=\"container-wrapper\">\n    <div class=\"main-container\">\n        <div class=\"itemHolder\">\n        <form class=\"form\" [formGroup]=\"loginForm\">\n            <mat-label class=\"textTitle\">Anmelden</mat-label> \n            <br>\n            <br>\n            <mat-form-field class=\"input\">\n                <mat-label class=\"text\">Benutzername</mat-label>\n                <input #user matInput formControlName=\"email\">\n                <mat-error *ngIf=\"loginForm.get('email').errors?.required\">\n                    Bitte gültigen Usernamen eingeben\n                </mat-error>\n            </mat-form-field>\n            <br>\n            <br>\n            <mat-form-field class=\"input\" (keydown.enter)=\"login(user.value,passw.value)\">\n                <mat-label class=\"text\">Passwort</mat-label>\n                <input #passw matInput type=\"password\" formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\">\n                <mat-error *ngIf=\"loginForm.get('password').errors?.required\">\n                    Bitte Passwort mit min. 6 Zeichen eingeben\n                </mat-error>\n                <i class=\"material-icons\" matSuffix (click)='hide = !hide' style=\"cursor: pointer;\">\n                    {{hide ? 'visibility' : 'visibility_off'}}\n                </i>\n            </mat-form-field>\n            <br>\n            <br>\n            <div class=\"logging\">\n                <a class=\"text\" routerLink=\"/home\">Anmeldedaten <br> vergessen? </a>\n                <app-basic-button [hover]=\"'blue'\" [btnText]=\"'Anmelden'\" [btnColor]=\"'colorGrey'\" [btnSize]=\"'medium'\"\n                    (clickFunction)=\"login(user.value,passw.value)\" [btnDisabled]=\"setBtnDisabled()\"></app-basic-button>\n            </div>\n        </form>\n    </div>\n    </div>\n</div>","import { ViewEncapsulation } from '@angular/core';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n@Component({\n  selector: 'app-select-field',\n  templateUrl: './select-field.component.html',\n  styleUrls: ['./select-field.component.scss'],\n})\n\n\n//needs the interface with id and name to give back the selectet value as a string in the ui and a object in the get item\nexport class SelectFieldComponent implements OnInit {\n\n  @Input() inputOutline: string = \"outline\"; //border over the field\n\n  @Input() textAlignRight: boolean = false; //selector text placeholder left or right\n\n  @Input() set textAlign(setTextAlign: string) {\n    switch(setTextAlign){\n      case \"right\": this.setTextAlign=\"right\"; break;\n      case \"center\": this.setTextAlign=\"center\"; break;\n      case \"left\": this.setTextAlign=\"left\"; break;\n      default: this.setTextAlign=\"left\"; break;\n    }\n  }\n\n  @Input() title: string = \"\"; // the default text in the field\n\n  @Input() matSelect: any;  // the input with the user choosen value\n\n  @Input() disabled: boolean;  //disabled the field\n\n  @Input() value: any;  //gets the input object like => id:number, name:string or id, fullname...\n\n  @Input() getkeyval: string = \"\"; // keyval to interate over the object and show it in the html\n\n  @Input() inputAriaLabel: string = this.title;\n\n  @Input() set textCenter(textCenter: boolean) {\n    if (textCenter) {\n      this.setTextCenter = \"textCenter\";\n    }\n  } //set the text to center\n\n  @Input() set colorSelect(color: string) {\n    switch (color) {\n      case 'white': this.inputClass = \"inputWhite\"; break;\n      default: this.inputClass = \"inputDefault\"; break;\n    }\n  };\n\n  @Output() getItem: EventEmitter<string> = new EventEmitter();\n\n  constructor() { }\n\n  setTextAlign: string = \"\";\n\n  inputClass: string = \"inputDefault\"; //default inherit in scss\n  setTextCenter: string = \"\";\n\n  ngOnInit(): void {\n  }\n\n  setValue() {\n    this.getItem.emit(this.matSelect);\n  }\n\n\n}\n","<!-- with object.property received -->\n<div *ngIf=\"getkeyval!=''; else onlyVariable\">\n<mat-form-field class=\"wrapperField\" appearance=\"{{inputOutline}}\">\n    <mat-label [attr.aria-label]=\"inputAriaLabel\" class=\"{{inputClass}}\" style=\"text-align: setTextAlign;\" >{{title}}</mat-label>\n    <mat-select  class=\"{{inputClass}}\" style=\"text-align: setTextAlign;\" [(value)]=matSelect [disabled]=disabled (selectionChange)=\"setValue()\">\n      <mat-option  class=\"fieldSelect\"  *ngFor=\"let choose of value\" [value]=choose >{{choose[getkeyval]}} <!-- needs the keyval because i can get different proberties from the input field in the components -->\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<!-- without getkeyval / object.property received -->\n<ng-template #onlyVariable>\n\n  <!-- if text align from the label should be right with distance 10 px -->\n <mat-form-field *ngIf=\"textAlignRight; else normalTextAlign \" style=\"text-align: right;\" class=\"wrapperField\" appearance=\"{{inputOutline}}\">\n    <mat-label [attr.aria-label]=\"inputAriaLabel\" style=\"margin-right: 10px;\" class=\"{{inputClass}}\" style=\"text-align: setTextAlign;\" >{{title}}</mat-label>\n    <mat-select  class=\"{{inputClass}} \" style=\"text-align: setTextAlign;\" [(value)]=matSelect [disabled]=disabled (selectionChange)=\"setValue()\">\n      <mat-option  class=\"fieldSelect\"   *ngFor=\"let choose of value\" [value]=choose >{{choose}} <!-- needs the keyval because i can get different proberties from the input field in the components -->\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!-- without textAlign -->\n<ng-template #normalTextAlign>\n  <mat-form-field class=\"wrapperField\" appearance=\"{{inputOutline}}\">\n    <mat-label [attr.aria-label]=\"inputAriaLabel\" class=\"{{inputClass}}\" style=\"text-align: setTextAlign;\" >{{title}}</mat-label>\n    <mat-select  class=\"{{inputClass}}\" style=\"text-align: setTextAlign;\" [(value)]=matSelect [disabled]=disabled (selectionChange)=\"setValue()\">\n      <mat-option  class=\"fieldSelect\"  *ngFor=\"let choose of value\" [value]=choose >{{choose}} <!-- needs the keyval because i can get different proberties from the input field in the components -->\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n</ng-template>\n\n\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core'; \nimport { Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-basic-button',\n  templateUrl: './basic-button.component.html',\n  styleUrls: ['./basic-button.component.scss']\n})\nexport class BasicButtonComponent implements OnInit {\n  @Input() btnText: string; //any Text\n\n  @Input() btnColor: string; //colorGreen, colorGrey defined\n\n  @Input() btnDisabled: boolean;\n\n  @Input() btnSize: string; //small, medium or big defined\n\n  @Input() set hover(hover:string){ //set the color when cursor hover over the button\n    switch(hover){\n      case \"blue\": this.hoverColor=\"hoverBlue\"; break;\n      case \"white\": this.hoverColor=\"hoverWhite\"; break;\n      case \"green\": this.hoverColor=\"hoverGreen\"; break;\n      default: this.hoverColor=\"\";\n    }\n  }\n\n  @Output(\"clickFunction\") clickFunction: EventEmitter<any> = new EventEmitter(); //any function from parent class will be triggered\n  \n  constructor() { }\n\n  hoverColor:string=\"\";\n\n  ngOnInit(): void {\n  }\n\n \n\n}\n","\n <button mat-raised-button class= \"basicBtn, {{btnSize}} {{btnColor}} {{hoverColor}}\" id= \"button\" type=\"button\" (click)= \"this.clickFunction.emit()\" [disabled] = \"btnDisabled\">{{btnText}} </button>\n\n <!-- oder matt-raised-button, wenn man einen Schatten haben will -->","import { PostService } from './../../Requests/post.service';\nimport { GetService } from './../../Requests/get.service';\nimport { ToastsService } from './toasts.service';\nimport { RouteToService } from '../../../services/route-to.service';\nimport { TableDataService } from './table-data.service';\nimport { Injectable } from '@angular/core';\nimport { IfirstRequest, IValue } from '../../../interfaces/IAssignment';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomersService {\n\n  apiUrl = environment.apiUrl;\n\n  assistent: IValue[] = [];\n  firstRequest: IfirstRequest[] = [];\n\n  constructor(private getService: GetService,\n    private postService: PostService,\n    private tableService: TableDataService,\n    private routeToService: RouteToService,\n    private toastr: ToastsService) { }\n\n\n  getAssistent() {\n\n    this.assistent = [];\n    this.getService.getAssistentRecordNewUse()\n      .toPromise()\n      .then(data => {\n        data.value.forEach((element) => {\n          this.assistent.push(element);\n        }),\n          error => {\n            console.log(error);\n          };\n      });\n\n    return this.assistent;\n  }\n\n  //takes the input values to calculate to the server and show the request to the table on the side\n  checkInputForTable(assistantid: number, pataskid: number, paymentmethodid: number, passttaskid: number, startTime: string, endTime: string) {\n    this.firstRequest = [];\n    this.postService.checkInputForTableRecordNewUse(assistantid, pataskid, paymentmethodid, passttaskid, startTime, endTime)\n      .toPromise()\n      .then((data: IfirstRequest[]) => {\n        this.firstRequest = (data);\n      })\n      .then(() => {\n        this.tableService.getData(this.firstRequest as any);\n      })\n    error => {\n      console.log(error);\n    }\n  }\n\n  //push the validation id to the server \n  pushInput() {\n    this.postService.pushInputRecordNewUse(this.firstRequest['id'])\n      .subscribe(() => {\n      })\n    error => {\n      console.log(error);\n      return;\n    }\n    this.toastr.seccondFormSuccess();\n    this.routeToService.handleClick('start');\n  }\n}","/* export for the visivle items in the header and side nav */\nexport var topBarInhales =\n{\n  topBarInhales1:\n    [\n      { id: 0, class: 'icon', click: 'start', name: 'Startseite' },\n      { id: 1, class: 'icon', click: 'stundenblaetterAktuellerMonat', name: 'Stundenblätter' },\n      { id: 2, class: 'icon', click: 'PASSTBonsGuthaben', name: 'PASST-Leistungsbons' },\n      { id: 3, class: 'icon', click: 'userSettings', name: 'Verwaltung Nutzerprofile' },\n     /*  { id: 4, class: 'icon', click: 'login', name: 'Abmelden' }, */\n    ],\n  topBarInhales2:\n    [\n      { id: 0, class: 'icon', click: 'start', name: 'Startseite' },\n      { id: 1, class: 'icon', click: 'neuenEinsatzErfassen', name: 'Neuer PA-Einsatz' },\n      { id: 2, class: 'icon', click: 'stundenblaetterAktuellerMonat', name: 'Stundenblätter' },\n      { id: 3, class: 'icon', click: 'benutzereinstellungen', name: 'Einstellungen' },\n     /*  { id: 4, class: 'icon', click: 'login', name: 'Abmelden' }, */\n    ],\n  topBarInhales3:\n    [\n      { id: 0, class: 'icon', click: 'start', name: 'Startseite' },\n      { id: 1, class: 'icon', click: 'neuenEinsatzBestaetigen', name: 'Einsatz bestätigen' }, //name: 'Neuer Einsatz'\n      { id: 2, class: 'icon', click: 'stundenblaetterAktuellerMonat', name: 'Stundenblätter' },\n      { id: 3, class: 'icon', click: 'PASSTBonsGuthaben', name: 'PASST-Leistungsbons' },\n      { id: 4, class: 'icon', click: 'benutzereinstellungen', name: 'Einstellungen' },\n    /*   { id: 5, class: 'icon', click: 'login', name: 'Abmelden' }, */\n    ]\n};\n\n","<nav mat-tab-nav-bar mat-stretch-tabs> <!-- [backgroundColor]=\"background\" -->\n    <a mat-tab-link *ngFor=\"let linkName of linkNames\"\n       (click)=\"setClickLink(linkName)\" \n       [active]=\"activeLink == linkName\"\n       routerLink=\"{{setClickLink(linkName)}}\"\n       > {{linkName}}\n    </a>\n  </nav>","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs-module',\n  templateUrl: './tabs-module.component.html',\n  styleUrls: ['./tabs-module.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TabsModuleComponent implements OnInit {\n\n  @Input() getContent: any;  //get the Names of the Links\n\n  @Input() getLinks: any;  //get the contentn of the Links\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n    this.linkNames = this.getContent;\n    this.linkRoutes = this.getLinks;\n    this.activeLink = this.linkNames[this.checkActualLink()];\n  }\n\n  linkNames: string[] = []; //'Stundenblätter aktuell', 'Stundenblätter Archiv'\n  linkRoutes: string[] = []; //'/stundenblaetterAktuellerMonat', '/stundenblaetterArchiv'\n  activeLink: any;\n\n  clickedLink(linkName) {\n    this.activeLink = linkName;\n  }\n\n  /**\n   * @returns index of linksRoute catch 0\n   */\n  checkActualLink() {\n    try {\n      return this.linkRoutes.indexOf(window.location.pathname);\n    } catch {\n      return 0;\n    }\n\n  }\n\n  setClickLink(linkName) {\n\n    return this.linkRoutes[this.linkNames.indexOf(linkName)];\n    // console.log(this.linkNames.indexOf[linkName]);\n    // console.log(this.linkNames.indexOf(linkName));\n\n\n  }\n\n  // background: ThemePalette = undefined;\n\n  /* toggleBackground() {\n    this.background = this.background ? undefined : 'primary';\n  }\n */\n  /*  addLink() {\n     this.links.push(`Link ${this.links.length + 1}`);\n   } */\n}\n","import { Injectable } from '@angular/core';\nimport { IHoursPerRate } from '../../../interfaces/IAssignment';\n\n\nexport interface IidsToNames {\n  N: number;\n  WE: number;\n  NA: number;\n  NP1: number;\n  NP2: number;\n  BonA: number;\n  BonB: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDataService {\n\n  constructor() { }\n\n  idsToNames(getData) {\n    var N: number = 0;\n    var WE: number = 0;\n    var NA: number = 0;\n    var NP1: number = 0;\n    var NP2: number = 0;\n    var BonA: number = 0;\n    var BonB: number = 0;\n\n\n    getData.hoursPerRate.forEach((getElement: IHoursPerRate) => {\n      switch (getElement.id) {\n        case 1: N = getElement.hours; break;\n        case 2: WE = getElement.hours; break;\n        case 3: NA = getElement.hours; break;\n        case 4: NP1 = getElement.hours; break;\n        case 5: NP2 = getElement.hours; break;\n        case 6: BonA = getElement.hours; break;\n        case 7: BonB = getElement.hours; break;\n        default: break;\n      }\n    });\n\n    return { N, WE, NA, NP1, NP2, BonA, BonB } as IidsToNames;\n  }\n\n  round2Commas(input) {\n    var reminder = input.toFixed(2);\n    //Number removed\n    return (reminder);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footBar\">\n    <div class=\"itemsContainer\">\n        <div class=\"logos\">\n            <img src=\"assets\\icons\\PAV_Logo_weiss_300x180px.png\" alt=\"Logo PAV\">\n            <br>\n            <br>\n            <img src=\"assets\\icons\\sozialfonds-vorarlberg-1.png\" alt=\"Logo Sozialfonds Vorarlberg\">\n        </div>\n\n        <div class=\"service\">\n            <h1>Servicestelle Persönliche Assistenz Vorarlberg</h1>\n            <p>Wir ermöglichen Menschen mit Behinderungen in Vorarlberg ein selbstbestimmtes Leben.</p>\n        </div>\n\n        <div>\n            <h1>Kontakt</h1>\n            \n                <span>Eisengasse 6</span>\n                <br>\n                <span>6850 Dornbirn</span>\n                <br>\n                <p>Austria</p>\n                <br>\n\n            <a href=\"mailto:office@pa-vorarlberg.at\">office@pa-vorarlberg.at</a>\n            <div>\n            <br>\n\n                <h3 style=\"display: inline;\">Öffnungszeiten:</h3>\n                <br>\n                <span>Mo-Fr: 9-12 Uhr</span>\n                <p>Mo, Mi, Do: 14-17 Uhr</p>\n            </div>\n        </div>\n\n        <div class=\"newsletter\">\n            <h1>Newsletter</h1>\n            <a href=\"https://pa-vorarlberg.us14.list-manage.com/subscribe?u=2ce9e4fae41a28bd953c77e48&id=a78427d585\">Zum\n                Newsletter anmelden</a>\n            <br>\n            <a href=\"https://www.pa-vorarlberg.at/impressum/\">Impressum</a>\n            <a href=\"https://www.pa-vorarlberg.at/impressum/\">Datenschutzerklärung</a>\n        </div>\n    </div>\n</div>\n\n<!--  <div>\n        <h1>Kontakt</h1>\n        <div>\n            <p>Eisengasse 6</p>\n            <p>6850 Dornbirn</p>\n            <p>Austria</p>\n        </div>\n        <a href = \"mailto:office@pa-vorarlberg.at\">office@pa-vorarlberg.at</a>\n        <div>\n            <p>Öffnungszeiten:</p>\n            <p>Mo-Fr: 9-12 Uhr</p>\n            <p>Mo, Mi, Do: 14-17 Uhr</p>\n        </div>\n        \n\n    </div>\n    <div >\n        <h1>Newsletter</h1>\n        <a href = \"https://pa-vorarlberg.us14.list-manage.com/subscribe?u=2ce9e4fae41a28bd953c77e48&id=a78427d585\">Zum Newsletter anmelden</a>\n        <a href = \"https://www.pa-vorarlberg.at/impressum/\">Impressum</a>\n        <a href = \"https://www.pa-vorarlberg.at/impressum/\">Datenschutzerklärung</a>\n    </div> -->\n\n\n\n\n\n\n<!-- \n      <div class = \"col2 text\">\n        <h1>Servicestelle Persönliche Assistenz Vorarlberg</h1>\n        <p>Wir ermöglichen Menschen mit Behinderungen in Vorarlberg ein selbstbestimmtes Leben.</p>\n    </div>\n    <div class = \"col3 text\">\n        <h1>Kontakt</h1>\n        <div>\n            <p>Eisengasse 6</p>\n            <p>6850 Dornbirn</p>\n            <p>Austria</p>\n        </div>\n        <a href = \"mailto:office@pa-vorarlberg.at\">office@pa-vorarlberg.at</a>\n        <div>\n            <p>Öffnungszeiten:</p>\n            <p>Mo-Fr: 9-12 Uhr</p>\n            <p>Mo, Mi, Do: 14-17 Uhr</p>\n        </div>\n        \n\n    </div>\n    <div class = \"col4 text\">\n        <h1>Newsletter</h1>\n        <a href = \"https://pa-vorarlberg.us14.list-manage.com/subscribe?u=2ce9e4fae41a28bd953c77e48&id=a78427d585\">Zum Newsletter anmelden</a>\n        <a href = \"https://www.pa-vorarlberg.at/impressum/\">Impressum</a>\n        <a href = \"https://www.pa-vorarlberg.at/impressum/\">Datenschutzerklärung</a>\n    </div>\n -->\n\n<!-- \n\n <br>\n <br>\n <div class=\"test\">\n     <h1>Servicestelle Persönliche Assistenz Vorarlberg</h1>\n     <p>Wir ermöglichen Menschen mit Behinderungen in Vorarlberg ein selbstbestimmtes Leben.</p>\n     <br>\n     <br>\n     <h1>Kontakt</h1>\n          <p>Eisengasse 6</p>\n     <p>6850 Dornbirn</p>\n     <p>Austria</p>\n    \n     <a href=\"mailto:office@pa-vorarlberg.at\">office@pa-vorarlberg.at</a>\n     <br>\n     <br>\n     <br>\n     <p>Öffnungszeiten:</p>\n     <p>Mo-Fr: 9-12 Uhr</p>\n     <p>Mo, Mi, Do: 14-17 Uhr</p>\n     <br>\n\n     <h1>Newsletter</h1>\n     <a href=\"https://pa-vorarlberg.us14.list-manage.com/subscribe?u=2ce9e4fae41a28bd953c77e48&id=a78427d585\">Zum\n         Newsletter anmelden</a>\n     <a href=\"https://www.pa-vorarlberg.at/impressum/\">Impressum</a>\n     <a href=\"https://www.pa-vorarlberg.at/impressum/\">Datenschutzerklärung</a>\n </div>\n\n\n  -->","import { GetService } from './../../Requests/get.service';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IValue, IRequest } from '../../../interfaces/IAssignment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ChooseActivitiysService {\n  /*  chooseActivitys: string[] = ['Veranstanltungsbesuch', 'Freizeitwege', 'ehrenamtliche Tätigkeit', 'Aufgaben im Rahmen der Elternsch.', 'sportliche Aktivität', 'Feizeitbeschäftigung zu Hause (Gäste)', 'Urlaub (Reisen, Ausflüge)', 'Arzt - und Krankenhausbesuche']*/\n\n  //chooseActivitys: string[] = [];\n  apiUrl = environment.apiUrl;\n\n  chooseActivitys: IValue[] = [];\n\n  constructor(private getService: GetService) { }\n\n  getChooseActivitys() {\n    this.chooseActivitys = [];\n    this.getService.getChooseActivitysRecordNewUse()\n      .toPromise()\n      .then(data => {\n        data.value.forEach(element => {\n          this.chooseActivitys.push(element);\n        }),\n          error => {\n            console.log(error);\n          };\n      });\n    return this.chooseActivitys;\n  }\n}","import { Injectable } from '@angular/core';\nimport { IHoursPerRate } from '../../../interfaces/IAssignment';\n\n\nexport interface IidsToNames {\n  N: number;\n  WE: number;\n  NA: number;\n  NP1: number;\n  NP2: number;\n  BonA: number;\n  BonB: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormDataService {\n\n  constructor() { }\n\n  idsToNames(getData) {\n    var N: number = 0;\n    var WE: number = 0;\n    var NA: number = 0;\n    var NP1: number = 0;\n    var NP2: number = 0;\n    var BonA: number = 0;\n    var BonB: number = 0;\n\n\n    getData.hoursPerRate.forEach((getElement: IHoursPerRate) => {\n      switch (getElement.id) {\n        case 1: N = getElement.hours; break;\n        case 2: WE = getElement.hours; break;\n        case 3: NA = getElement.hours; break;\n        case 4: NP1 = getElement.hours; break;\n        case 5: NP2 = getElement.hours; break;\n        case 6: BonA = getElement.hours; break;\n        case 7: BonB = getElement.hours; break;\n        default: break;\n      }\n    });\n\n    return { N, WE, NA, NP1, NP2, BonA, BonB } as IidsToNames;\n  }\n\n  round2Commas(input) {\n    var reminder = input.toFixed(2);\n    //Number removed\n    return (reminder);\n  }\n}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [\n    // animation triggers go here\n  ]\n})\nexport class AppComponent {\n  title = 'PASSTDigitalisierung';\n}\n","<app-side-nav \n  [sidenavTemplateRef]=\"navContent\"\n  [direction]=\"'right'\" \n  [navWidth]=\"300\" \n  [duration]=\"0.5\"></app-side-nav>\n\n<div class=\"main-container\">\n  <app-header></app-header>\n  <section>\n    <router-outlet></router-outlet>\n  </section>\n  \n</div>\n\n<ng-template #navContent>\n</ng-template>\n\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnInit } from '@angular/core';\n\nexport interface TableData {\n  assistance: string;\n  date: string;\n  duration: string;\n  tariff: string;\n\n}\n\nconst TABLE_DATA: TableData[] = [\n  { assistance:'Daniel K.', date:'22.2.2020', duration:'09:30 Uhr - 10:30 Uhr',tariff:'1 Stunde Tarif A' },\n  \n\n]\n@Component({\n  selector: 'app-confirm-use',\n  templateUrl: './confirm-use.component.html',\n  styleUrls: ['./confirm-use.component.scss']\n})\nexport class ConfirmUseComponent implements OnInit {\n\n  hours=\"2\";\n  assistance=\"Angelo Grün\";\n  date=\"22.1.2020\";\n  startTime=\"09:00\";\n  endTime=\"10:30\";\n  displayedColumns: string[] = ['assistance', 'date','duration','tariff'];\n  dataSource = TABLE_DATA;\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<app-title [blueText]=\"'Neuen Einsatz'\"  [greyText]=\"'bestätigen'\"></app-title>\n<div class=\"start-wrapper\">\n    <div class=\"green-container\">\n        <div class=\"shelfLeft\">\n            <div>\n                <h2 class=\"text\">AssistentIn: {{assistance}} </h2>\n                <h2 class=\"text\">Datum: {{date}}</h2>\n                <h2 class=\"text\">Dauer: {{startTime}} Uhr - {{endTime}} Uhr</h2>\n                <h2 class=\"text\">{{hours}} Stunde Tarif Normal</h2>\n                <h2 class=\"text\">{{hours}} Stunde Tarif Nacht</h2>\n                <div>\n                    <mat-form-field>\n                        <!-- *ngFor=\"let choosenActivity of chooseActivitys\" [value]=\"choosenActivity\">{{choosenActivity}} -->\n                        <mat-label class=\"text\">Tätigkeiten auswählen:</mat-label> <!-- multible für mehrere -->\n                        <mat-select>\n                            <mat-option></mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <mat-form-field>\n                        <!-- *ngFor=\"let choosenActivity of chooseActivitys\" [value]=\"choosenActivity\">{{choosenActivity}} -->\n                        <mat-label class=\"text\">PASST - Bon:</mat-label> <!-- multible für mehrere -->\n                        <mat-select>\n                            <mat-option></mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div>\n                    <mat-form-field>\n                        <!-- *ngFor=\"let choosenActivity of chooseActivitys\" [value]=\"choosenActivity\">{{choosenActivity}} -->\n                        <mat-label class=\"text\">PASST - Tätigkeiten:</mat-label> <!-- multible für mehrere -->\n                        <mat-select>\n                            <mat-option></mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"shelfRight\">\n        <p>Irren ist menschlich... <br>Stimmt etwas nicht bei den Einsatzdaten? Bitte setzen sie sich mit <br>\n            der PA- Servicestelle in Verbindung!</p><br>\n      <!--   <p>Irren ist menschlich... <br>Stimmt etwas nicht bei den Einsatzdaten? Bitte setzen sie sich mit Ihrer <br>\n            AssistentIn\n            oder der PA- Servicestelle in Verbindung!</p><br> -->\n        <app-basic-button [btnText]=\"'Abbrechen'\" [btnColor]=\"'colorGrey'\" [btnSize]=\"'medium'\" [btnDisabled]=\"false\">\n        </app-basic-button>\n        <br>\n        <app-basic-button [btnText]=\"'Bestätigen'\" [btnColor]=\"'colorGreen'\" [btnSize]=\"'medium'\" [btnDisabled]=\"false\">\n        </app-basic-button>\n    </div>\n</div>","//import { ColorElementsService } from '../../services/color-elements.service';\nimport { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { NavigationService } from 'src/app/services/navigation.service';\nimport { Observable } from 'rxjs';\nimport { SideNavDirection } from './side-nav-direction';\nimport { RouteToService } from '../../services/route-to.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SideNavComponent implements OnInit {\n\n  showSideNav: Observable<boolean>;\n  buttons:any;\n  roleId = localStorage.getItem('roleId');\n  loginLogout = \"Abmelden\";\n\n\n  @Input() sidenavTemplateRef: any;\n  @Input() duration: number = 0.25; //default Time for react is 0,25s\n  @Input() navWidth: number = window.innerWidth;\n  @Input() direction: SideNavDirection = SideNavDirection.Left; //which side is the side bar is starting\n\n  constructor(private navService: NavigationService,\n    private routeToService: RouteToService,\n   // private colorService: ColorElementsService,\n    auth: AuthService) {\n    auth.getButtons.subscribe(but => {\n      this.proveButtons(but);\n    })\n  }\n\n  ngOnInit(): void {\n    this.showSideNav = this.navService.getShowNav();\n    this.refresh();//for the first init and refresh from the page \n  }\n\n  /* closes the sidenav element  */\n  onSidebarClose() {\n    this.navService.setShowNav(false);\n  }\n\n  getSideNavBarStyle(showNav: boolean) {\n    let navBarStyle: any = {};\n\n    navBarStyle.transition = this.direction + ' ' + this.duration + 's, visibility ' + this.duration + 's';\n    navBarStyle.width = this.navWidth + 'px';\n    navBarStyle[this.direction] = (showNav ? 0 : (this.navWidth * -1)) + 'px';\n\n    return navBarStyle;\n  }\n\n  /* switches between the userId and generate the side nav elements with click event */\n  generateButtons() {\n    this.buttons = this.routeToService.buttons;\n\n  }\n\n  /* handles the click event with the value string to the different methods */\n  handleClick(method: any) {\n\n  /*   if (method.click != \"login\") {\n     this.colorService.handleClickHeader(method);\n    } */\n\n    this.routeToService.handleClick(method.click);\n    this.onSidebarClose();\n\n\n  }\n  /**\n   * emits the change in the auth service to toggle the items in the sideNav in the routToService component with the diffenent arrays\n   * @param but \n   */\n  proveButtons(but:string) {\n    if (but == \"getToken\") {\n      this.roleId = localStorage.getItem('roleId');\n      this.routeToService.generateButtons(this.roleId);\n      this.loginLogout = \"Abmelden\";\n    } \n    if (but == \"noToken\") {\n      this.roleId = localStorage.getItem('roleId');\n      this.routeToService.generateButtons(this.roleId);\n      this.loginLogout = \"Anmelden\";\n    }\n    this.buttons = this.routeToService.buttons;\n  }\n\n  /**\n   * on refresh the button with the actual link will be colored\n   */\n  refresh() {\n    this.roleId = localStorage.getItem('roleId');\n    this.routeToService.generateButtons(this.roleId);\n    this.buttons = this.routeToService.buttons;\n  }\n}","<!-- side bar main wrapper -->\n<div class=\"side-nav-bar\"\n    [ngClass]=\"{ 'side-nav-bar-collapsed': !(showSideNav | async) }\">\n    \n    <!-- overlay -->\n    <div class=\"side-nav-bar-overlay\" \n    [ngStyle]=\"{ 'transition': 'background-color ' + duration + 's, visibility ' + duration + 's' }\"\n    [ngClass]=\"{ 'side-nav-bar-overlay-collapsed': !(showSideNav | async) }\"\n        (click)=\"onSidebarClose()\"></div>\n    \n    <!-- side bar-->\n    <div class=\"side-nav-bar-menu-container\" \n    [ngStyle]=\"getSideNavBarStyle((showSideNav | async))\">\n        \n        <!-- close button -->\n        <div><span class=\"material-icons side-nav-bar-close\" (click)=\"onSidebarClose()\">clear</span>\n        </div>\n\n        <!-- side bar content -->\n        <div class=\"side-nav-bar-content-container\">\n            <ng-container *ngTemplateOutlet=\"sidenavTemplateRef\"></ng-container>\n            <div class=\"buttonHolder\">\n                  <div *ngFor=\"let button of buttons\" class=\"elementses\" >\n                    <p  *ngIf=\"button.name!='Abmelden'\" (click)=\"handleClick(button)\" id={{button.click}} >\n                        {{button.name}}\n                    </p>\n                </div>\n\n                <!-- logout -->\n                  <p  (click)=\"handleClick({click:'login'})\" class=\"logoutButton\" id=\"Abmelden\"> \n                     {{loginLogout}} \n                  </p>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgxMaterialTimepickerTheme, NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\n\n@Component({\n  selector: 'app-time-picker',\n  templateUrl: './time-picker.component.html',\n  styleUrls: ['./time-picker.component.scss']\n})\nexport class TimePickerComponent implements OnInit {\n  @Input() title: string; //Text\n\n  @Input() pickTime: string; //get the picked time\n\n  @Input() minutesGap: string; // minutes gap between the picker minutes\n\n  @Input() getName: string;\n\n  @Input() set colorPicker(color:string){\n    switch(color){\n      case 'white' : this.inputClass=\"inputWhite\"; this.arrowButtonClass=\"pickButtonWhite\"; break;\n      default : this.inputClass=\"inputDefault\"; this.arrowButtonClass=\"pickButtonDefault\"; break;\n    }\n  };\n\n  inputClass:string=\"\"; //toggles the color for the input field\n  arrowButtonClass:string=\"\"; //toggles the color for the pick button \n\n  @Output() time: EventEmitter<string> = new EventEmitter(); //get the time when clicked\n\n  getTime=\"\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n  \n  setTime(){\n    this.time.emit(this.getTime);\n  }\n  \n  colorTimePicker: NgxMaterialTimepickerTheme = {\n    container: {\n      bodyBackgroundColor: '#f4f4f4', //whtie\n      buttonColor: '#1D71B8' //blue\n    },\n    dial: {\n      dialBackgroundColor: '#1D71B8', //blue\n    },\n    clockFace: {\n      clockFaceBackgroundColor: '#D3D3D3', //lightgray\n      clockHandColor: '#95c11f',  //green\n      clockFaceTimeInactiveColor: '#000000',\n      clockFaceInnerTimeInactiveColor: '#000000' //black\n    },\n  };\n  open(){\n  }\n}\n","<mat-form-field  class=\"timePicker\" appearance=\"outline\">\n  <mat-label class=\"label\" >{{title}}</mat-label> \n  <input   class=\"input\"  matInput [(ngModel)]=\"getTime\" [ngxTimepicker]=\"getName\" [format]=\"24\" placeholder=\"00:00\"  readonly />\n  <ngx-material-timepicker-toggle id=\"icon\" matSuffix [for]=\"getName\">\n    </ngx-material-timepicker-toggle>\n</mat-form-field>\n<ngx-material-timepicker  (closed)=\"setTime()\" [theme]=\"colorTimePicker\" [minutesGap]=\"minutesGap\" #getName></ngx-material-timepicker>\n\n","import { Injectable } from '@angular/core';\nimport { NativeDateAdapter } from '@angular/material/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nexport class CustomDateAdapterService extends NativeDateAdapter {\n\n  //first day of the week is now monday\n  getFirstDayOfWeek(): number {\n   return 1;\n  }\n\n}","\nimport { Component, OnInit } from '@angular/core';\nimport { DBdataBonCreditService } from 'src/app/services/dbdata-bon-credit.service'\nimport IbonCreditData from 'src/app/interfaces/ibon-credit-data';\n\n\n\n@Component({\n  selector: 'app-passtbons',\n  templateUrl: './passtbons.component.html',\n  styleUrls: ['./passtbons.component.scss']\n})\nexport class PASSTBonsComponent implements OnInit {\n subpageNavItems : string [] = [\"Guthaben\", \"Bon Archiv\"]; /* , \"Aktuelle Bewilligung\" */\n subpageNavRoutes : string [] = [\"/PASSTBonsGuthaben\", \"/PASSTBonsArchiv\"]; /*  \"/AktuelleBewilligung\" */\n constructor(private DBdataBonCreditService: DBdataBonCreditService) { }\n\n Data:IbonCreditData;\n grantStart:Date = new Date('2020-11-01T03:24:00');\n grantEnd:Date = new Date('2021-10-31T03:24:00');\n grantAmountA:number = 500;\n grantAmountB:number = 500;\n usedBonsA:number = 375;//nur aus dem Zeitraum der aktuellen Bewilligung\n usedBonsB:number = 328;// -''-\n usedcurrMonthA:number = 5;//Bons verbraucht im aktuellen Monat\n usedcurrMonthB:number = 7;// -''-\n\n //for calculation\n currMonth:number;\n grantArray:number[] =[1,2,3,4,5,6,7,8,9,10,11,12];\n\n ngOnInit(): void {\n   //  this.loadDBData(); \n }\n\n // loadDBData() {\n //   this.DBData.loadData().subscribe((data :any) => {\n //       this.Data = data;\n //   }\n //   )};\n\n getCurrCredTotal(grantAmount:number, usedBons:number){\n     let currCredTotal: number =  grantAmount - usedBons;\n     return currCredTotal\n }\n\n getcurrCredMonthly(grantAmount:number, usedBons:number, usedCurrMonth:number ){\n   // get current month\n   let today:Date = new Date();\n   this.currMonth = today.getMonth()+1;\n\n   // get  Month when granting started\n   let grantStartMonth = this.grantStart.getMonth()+1; //Rückgabewerte der Monate sind 0-11, daher +1\n   \n   // get Amount of MOnths left until current grant expires\n   for(let i = 1; i<=12; i++){\n     if(i < grantStartMonth){\n       this.grantArray.shift(),\n       this.grantArray.push(i);\n     }    \n   };\n   let monthsLeft:number = 12 -(this.grantArray.indexOf(this.currMonth));//da Array index mit 0 anfängt müsste man -1 rechnen, aber da der aktuelle Monat auch mitgezählt wird ist das nicht nötig\n \n   //get total Amount of Bon credit (of chosen tarif)\n   let currCredTotal: number =  grantAmount - usedBons;\n   // add amount of those Bons that have been used this actual month and divide by montLeft(we need the Number from the beginning of actual month)\n   let currCredMonth : number =  (currCredTotal + usedCurrMonth)/monthsLeft;\n   //subtract amount of Bons that have been used this actual month again\n   currCredMonth-=usedCurrMonth;\n   \n   return Math.round(currCredMonth); // Ausgabe gerundet.\n }\n\n}\n\n\n\n\n \n \n\n\n","<app-title [blueText]=\"'Ihr PASST -'\"  [greyText]=\"'Leistungsbon Guthaben'\"></app-title>\n\n<div class=\"main-container\">\n<app-tabs-module\n    [getContent]=\"subpageNavItems\"\n    [getLinks]=\"subpageNavRoutes\"\n    ></app-tabs-module>\n</div>\n\n<div class=\"container-wrapper\">\n<div class= \"green-container\">\n   <!--  <app-side-nav-subpages [data] = \"subpageNavItems\" [route] = \"subpageNavRoutes\"></app-side-nav-subpages>  -->\n    <div class=\"items-container\">\n        <div class = \"left-right\">\n            <h1 class = \"heading\">Guthaben gesamt bis {{grantEnd.toLocaleDateString()}}:</h1>\n            <div class = \"credit-container\">\n                <button class = \"white-box\">\n                    <img src=\"assets/icons/voucher.png\">\n                    <label for = \"bonsAtotal\" >Tarif A </label>\n                <p class = \"bon-credit\" id =\"bonsAtotal\">{{getCurrCredTotal(grantAmountA, usedBonsA)}} &nbsp; Leistungsbons</p>\n                </button>\n                <button class = \"white-box\">\n                    <img src=\"assets/icons/voucher.png\" alt=\"Bleistift icon\">\n                    <label for = \"bonsBtotal\" >Tarif B </label>\n                    <p class = \"bon-credit\" id = \"bonsBtotal\">{{getCurrCredTotal(grantAmountB, usedBonsB)}} &nbsp; Leistungsbons</p>\n                </button>\n            </div>\n        </div>\n    \n        <div class = \"left-right\">\n            <h1 class = \"heading\">Guthaben bis Ende dieses Monats (*):</h1>\n            <div class = \"credit-container\">\n                <button class = \"white-box\">\n                    <img src=\"assets/icons/voucher.png\">  \n                    <label for = \"bonsAthismonth\" >Tarif A</label>\n                    <p class = \"bon-credit\" id = \"bonsAthismonth\">{{getcurrCredMonthly(grantAmountA, usedBonsA, usedcurrMonthA)}} &nbsp; Leistungsbons</p>\n                </button>\n                <button class = \"white-box\">\n                    <img src=\"assets/icons/voucher.png\">\n                    <label for = \"bonsBthismonth\" >Tarif B</label>\n                    <p class = \"bon-credit\" id = \"bonsBthismonth\">{{getcurrCredMonthly(grantAmountB, usedBonsB, usedcurrMonthB)}} &nbsp; Leistungsbons</p>\n                </button>\n            </div>\n            <div class= \"comment\">\n                <p>(*) bei gleichmäßig verteilter Verwendung der Bons. </p>\n                <p>ACHTUNG: Die Verwendung  Ihrer Bons bleibt ihnen überlassen.</p>\n                <p>Diese Zahlen sollen als Orientierung dienen und Ihnen die Einteilung erleichtern.</p> \n            </div>\n        </div>\n    </div>\n</div>\n</div>\n\n\n","<!-- <div class= \"start-wrapper\"> -->\n<app-title [blueText]=\"'Persönliche Assistenz -'\" [greyText]=\"'einfach erfasst!'\"></app-title>\n<div class=\"wrapper-container\">\n    <div class=\"main-container\">\n\n        <div class=\"itemsContainer\">\n            <div class=\"welcome\">\n                <p>Herzlich</p>\n                <p>Willkommen </p>\n                <p *ngFor=\"let user of userNameSplit\">{{user}}</p>\n            </div>\n\n            <div class=\"buttonHolderHome\">\n                <div *ngFor=\"let route of routerLinks; let i= index;\" >\n                    <div  class=\"buttonsHome\">\n                        <button class=\"item2\" (click)=\"routeTo(route)\" [attr.aria-label]=\"'Link'+ route\">\n                            <img src=\"{{makeImage(route)}}\" aria-hidden=\"true\" alt=\"{{makeAlt(route)}}\">\n                            <p aria-hidden=\"true\">{{makeLabel(route)}}</p>\n                        </button>\n                    </div>\n            </div>\n\n        </div>\n    </div>\n</div>","import { RouteToService } from '../../../services/route-to.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  userName: string = window.localStorage.getItem('fullName');\n  neuerEinsatzVisible: boolean = true;\n  PASSTBonsVisible: boolean = true;\n  textI4: string = \"Einstellungen\";\n  itemAmount: string = \"display4Items\";\n  roleId: string = localStorage.getItem('roleId');\n\n\n  userNameSplit: string[] = [];\n\n  routerLinks = ['/neuenEinsatzErfassen', '/neuenEinsatzBestaetigen', '/stundenblaetterAktuellerMonat', '/PASSTBonsGuthaben', '/benutzereinstellungen']\n\n\n  constructor(\n    private routeToService: RouteToService,\n  ) { }\n\n  ngOnInit(): void {\n    if (this.proveLogin()) {\n      this.userNameSplit = this.cutUsername();\n\n      switch (this.roleId) {\n        case \"1\": this.routerLinks = ['stundenblaetterAktuellerMonat', 'PASSTBonsGuthaben', 'benutzereinstellungen']; break;\n        case \"2\": this.routerLinks = ['neuenEinsatzErfassen', 'stundenblaetterAktuellerMonat', 'benutzereinstellungen']; break;\n        case \"3\": this.routerLinks = ['neuenEinsatzBestaetigen', 'stundenblaetterAktuellerMonat', 'PASSTBonsGuthaben', 'benutzereinstellungen']; break;\n        default: break;\n      }\n\n    }\n  }\n\n  proveLogin() {\n    if (localStorage.getItem('jwtToken') == null || localStorage.getItem('jwtToken') == undefined || localStorage.getItem('jwtToken') == \"\") {\n      this.routeToService.handleClick('login');\n      return false;\n    }\n    return true;\n\n  }\n\n  cutUsername() {\n    return this.userName.split(\" \");\n  }\n\n  routeTo(route: string) {\n     this.routeToService.handleClick(route);\n    \n  }\n\n  makeLabel(route:string){\n    switch(route){\n      case \"stundenblaetterAktuellerMonat\": return \"Stundenblätter\"; \n      case \"PASSTBonsGuthaben\":return \"PASST Leistungsbons\"; \n      case \"benutzereinstellungen\": return \"Einstellungen\"; \n      case \"neuenEinsatzErfassen\": return  \"Einsatz Erfassen\"; \n      case \"neuenEinsatzBestaetigen\": return \"Einsatz Bestägtigen\"; \n      default: return \"noContent\";\n    }\n  }\n\n  makeImage(route:string){\n    switch(route){\n      case \"stundenblaetterAktuellerMonat\": return \"assets/icons/PASST_sheets_grau.png\"; \n      case \"PASSTBonsGuthaben\":return \"assets/icons/PASST_Ticket_grau.png\"; \n      case \"benutzereinstellungen\": return \"assets/icons/passt_User_grau.png\"; \n      case \"neuenEinsatzErfassen\": return  \"assets/icons/PASST_write_grau.png\"; \n      case \"neuenEinsatzBestaetigen\": return \"assets/icons/PASST_write_grau.png\"; \n      default: return \"noContent\";\n    }\n  }\n\n  makeAlt(route:string){\n    switch(route){\n      case \"stundenblaetterAktuellerMonat\": return \"Mehrere Blätter\"; \n      case \"PASSTBonsGuthaben\":return \"Ticket\"; \n      case \"benutzereinstellungen\": return \"Benutzer Bild\"; \n      case \"neuenEinsatzErfassen\": return  \"Block mit Stift\"; \n      case \"neuenEinsatzBestaetigen\": return \"Block mit Stift\"; \n      default: return \"noContent\";\n    }\n  }\n\n}\n\n/*\n{path:'login',component:LoginComponent},\n  {path:'start', component:HomeComponent},\n  {path:'neuenEinsatzErfassen', component:RecordNewUseComponent},\n  {path:'neuenEinsatzBestaetigen', component:ConfirmUseComponent},\n  {path: 'PASSTBonsArchiv', component: PASSTBonsArchiveComponent},\n  {path:'PASSTBonsGuthaben', component: PASSTBonsComponent},\n  {path:'AktuelleBewilligung', component:CurrGrantComponent},\n  {path:'stundenblaetterAktuellerMonat', component:HourSheetsCurrentMonthComponent},\n  {path: 'stundenblaetterArchiv', component: HourSheetsArchiveComponent},\n  {path: 'benutzereinstellungen', component: UserSettingsComponent},\n*/\n\n\n","import { CustomDateAdapterService } from './services/custom-date-adapter.service';\nimport { CurrGrantComponent } from './sites/customer/curr-grant/curr-grant.component';\n\n\nimport { AuthInterceptor } from './services/auth.interceptor';\nimport { LoginComponent } from './sites/generally/login/login.component';\nimport { HeaderComponent } from './components/header/header.component';\n\nimport { NgModule } from '@angular/core';\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatInputModule } from '@angular/material/input'; //install with: ng add @angular/material\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DateAdapter, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatListModule } from '@angular/material/list';\nimport { FlexLayoutModule } from '@angular/flex-layout'; //install with : npm i -s @angular/flex-layout @angular/cdk\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\nimport { MatTableModule } from '@angular/material/table';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable'; //npm i @swimlane/ngx-datatable --save\nimport { NgxPaginationModule } from 'ngx-pagination'; //npm i ngx-pagination --save\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSelectModule } from '@angular/material/select';\nimport { SideNavComponent } from './components/side-nav/side-nav.component';\nimport { HomeComponent } from './sites/generally/home/home.component';\nimport { RecordNewUseComponent } from './sites/assistance/record-new-use/record-new-use.component';\nimport { BasicButtonComponent } from './components/basic-button/basic-button.component';\nimport { ConfirmUseComponent } from './sites/customer/confirm-use/confirm-use.component';\n\n\nimport { SideNavSubpagesComponent } from './components/side-nav-subpages/side-nav-subpages.component';\nimport { PASSTBonsComponent } from './sites/customer/passtbons/passtbons.component';\n\nimport { HourSheetsCurrentMonthComponent } from './sites/customer/hour-sheets-current-month/hour-sheets-current-month.component';\nimport { TimePickerComponent } from './components/time-picker/time-picker.component';\nimport { SelectFieldComponent } from './components/select-field/select-field.component';\nimport { DatePickerComponent } from './components/date-picker/date-picker.component';\nimport {A11yModule} from '@angular/cdk/a11y';\n\n\nimport { FooterComponent } from './components/footer/footer.component';\nimport { PASSTBonsArchiveComponent } from './sites/customer/passtbons-archive/passtbons-archive.component';\nimport { HourSheetsArchiveComponent } from './sites/customer/hour-sheets-archive/hour-sheets-archive.component';\nimport { UserSettingsComponent } from './sites/generally/user-settings/user-settings.component';\n\nimport { AngularResizedEventModule } from 'angular-resize-event';\nimport { TitleComponent } from './components/title/title.component';\nimport { NgxTableComponent } from './components/ngx-table/ngx-table.component';\nimport { SearchFieldComponent } from './components/search-field/search-field.component';\nimport { TabsModuleComponent } from './components/tabs-module/tabs-module.component';\nimport { NgxDateTimePickerComponent } from './components/ngx-date-time-picker/ngx-date-time-picker.component';\nimport {NgxMatDatetimePickerModule, NgxMatNativeDateModule, NgxMatTimepickerModule,NgxMatDateFormats,NGX_MAT_DATE_FORMATS } from '@angular-material-components/datetime-picker';\nimport { PopupTableComponent } from './sites/assistance/record-new-use/popup-table/popup-table.component';\n\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { NgxMatMomentModule } from '@angular-material-components/moment-adapter';\n\n/**\n * customise the date-time-picker\n */\nconst CUSTOM_DATE_FORMATS: NgxMatDateFormats = {\n  parse: {\n    dateInput: 'l, LTS'\n  },\n  display: {\n    dateInput: 'DD.MM.YYYY HH:mm',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  }\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    SideNavComponent,\n    HomeComponent,\n    RecordNewUseComponent,\n    BasicButtonComponent,\n    ConfirmUseComponent,\n    HourSheetsCurrentMonthComponent,\n    SideNavSubpagesComponent,\n    PASSTBonsComponent,\n    CurrGrantComponent,\n    TimePickerComponent,\n    SelectFieldComponent,\n    DatePickerComponent,\n    FooterComponent,\n    PASSTBonsArchiveComponent,\n    HourSheetsArchiveComponent,\n    UserSettingsComponent,\n    TitleComponent,\n    NgxTableComponent,\n    SearchFieldComponent,\n    TabsModuleComponent,\n    NgxDateTimePickerComponent,\n    PopupTableComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatInputModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatToolbarModule, MatSelectModule,\n    HttpClientModule,\n    MatListModule,\n    FlexLayoutModule, MatFormFieldModule, MatCardModule, ReactiveFormsModule,\n    MatIconModule, MatSidenavModule,\n    ToastrModule.forRoot({\n      positionClass: 'toast-center-center'\n    }),\n    TimepickerModule.forRoot(),\n    MatTableModule,\n    NgxMaterialTimepickerModule,\n    AngularResizedEventModule,\n    NgxDatatableModule,\n    NgxPaginationModule,\n    MatTabsModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatNativeDateModule,\n    A11yModule,\n    MatDialogModule,\n    NgxMatMomentModule,\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'de-DE' },\n    { provide: DateAdapter, useClass: CustomDateAdapterService }, //need to set the start date from the datepicker to monday or other values\n    {\n      provide: HTTP_INTERCEPTORS,   //when the app is called angular compile the HTTP_Interceptor provider\n      useClass: AuthInterceptor,   //this is the class i call to pass the jwt token as a request in the browser window\n      multi: true //for multible use of interceptors\n    },\n    /* {\n      provide: NgxDateTimePickerComponent,\n      useClass: CustomDateAdapterService,\n    }, */\n    { provide: NGX_MAT_DATE_FORMATS, useValue: CUSTOM_DATE_FORMATS }\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n/* export interface DialogTitle {\n  title:string;\n}*/\nexport interface DialogData {\n  rowsTitles: any;\n  rows: any;\n}\n\n@Component({\n  selector: 'app-popup-table',\n  templateUrl: './popup-table.component.html',\n  styleUrls: ['./popup-table.component.scss']\n})\nexport class PopupTableComponent implements OnInit {\n\n  getData: any=[];\n\n  getTitles: any=[];\n\n  getRows: any=[];\n\n  tableDataSource:any=[];\n\n  displayedColumns:any=['hours', 'definition', 'costs'];\n\n  constructor(\n    public dialogRef: MatDialogRef<PopupTableComponent>,\n    /*  @Inject(MAT_DIALOG_DATA) public title: DialogTitle, */\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.tableDataSource = data;\n  }\n\n\n  ngOnInit(): void {\n   \n  }\n\n  /**\n   * importent to close the dialogRef else it will open multible times\n   */\n  /* onNoClick(): void {\n    this.dialogRef.close();\n  } */\n\n  \n}\n","<div class=\"wrapperDialog\">\n\n  <h1 id=\"title\">Bitte die Eintragung(en) auf Richtigkeit überprüfen.</h1>\n\n <div class=\"tableWrapper\">\n  <mat-table #table [dataSource]=\"tableDataSource\" > <!-- *ngIf=\"showTable\" -->\n    <!-- *ngIf=\"showTable\" -->\n    <!-- Hours Column -->\n    <ng-container matColumnDef=\"hours\">\n      <mat-header-cell *matHeaderCellDef> Stunden </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.hours}} </mat-cell>\n    </ng-container>\n    <!-- Definition Column -->\n    <ng-container matColumnDef=\"definition\">\n      <mat-header-cell *matHeaderCellDef> Tarif </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.definition}} </mat-cell>\n    </ng-container>\n    <!-- Costs Column -->\n    <ng-container matColumnDef=\"costs\">\n      <mat-header-cell *matHeaderCellDef> Kosten </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.costs}} </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n</div>\n\n\n\n\n<div class=\"actions\">\n\n  <app-basic-button mat-dialog-close  [btnText]=\"'Zurück'\" [mat-dialog-close]=\"false\" [btnColor]=\"'colorGrey'\" \n      [btnDisabled]=\"false\">\n    </app-basic-button> <!-- (clickFunction)=\"clickSave()\" -->\n\n    <div style=\"width: 20px;\"></div>\n\n  <app-basic-button mat-dialog-close [btnText]=\"'Speichern'\" [mat-dialog-close]=\"true\" [btnColor]=\"'colorGreen'\" \n      [btnDisabled]=\"false\">\n    </app-basic-button> <!-- (clickFunction)=\"clickSave()\" -->\n\n</div>\n\n</div>\n","<app-title [blueText]=\"'Einstellungen'\"  [greyText]=\"' '\"></app-title>\n<h1>Ihr Benutzer-Konto</h1>\n<p>Benutzername:  </p>\n<p>Kathegorie: {{role}}</p>\n<app-basic-button *ngIf= \"!isClicked\" id=\"showPWForm\" [btnText]=\"'Passwort ändern'\" [btnColor]=\"'colorGreen'\"(clickFunction)=\"showPWForm()\" >\n</app-basic-button>\n\n<div *ngIf= \"isClicked\" >\n    <form class=\"changePWForm\">\n    <mat-form-field class=\"newPwFirst\">\n      <mat-label>neues Passwort</mat-label>\n      <input matInput  type=\"password\" placeholder=\"neues Passwort\" formControlName=\"PwFirstInput\">\n    </mat-form-field>\n  \n    <mat-form-field class=\"newPwSecond\">\n      <mat-label>Passwort wiederholen</mat-label>\n      <input matInput type=\"password\" placeholder=\"Passwort wiederholen\"formControlName=\"PwSecondInput\" >\n    </mat-form-field>\n  </form>\n  <app-basic-button  id=\"changePW\" [btnText]=\"'Passwort ändern'\" [btnColor]=\"'colorGreen'\"(clickFunction)=\"showPWForm()\" >\n</app-basic-button>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {  FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.component.html',\n  styleUrls: ['./user-settings.component.scss']\n})\nexport class UserSettingsComponent implements OnInit {\n  userName : string;\n  role: string;\n  isClicked: boolean = false; \n  changePWForm: FormGroup;\n  submitted = false\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.getRole();\n  }\n\n  getRole(){ \n    let userId = localStorage.getItem('roleId');\n    switch(userId){\n      case \"1\": this.role= \"MitarbeiterIn Servicestelle\";\n      break;\n      case \"2\": this.role= \"AssistentIn\";\n      break;\n      case \"3\": this.role = \"AssistenznehmerIn\";\n    }\n  }\n\n  showPWForm(){\n    this.isClicked = true;\n  }\n\n  \n\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IHourSheet, IRequest } from 'src/app/interfaces/IAssignment';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetService {\n\n  constructor(private http: HttpClient) { }\n\n  apiUrl = environment.apiUrl;\n\n  //#region customer\n  /**\n * @returns IHourSheet /timesheet get Request\n */\n  getTimeSheetHourSheetesCurrentMonth() {\n    return this.http.get<IHourSheet[]>(this.apiUrl + `/timesheet`);\n  }\n\n  /**\n   * @param date date from the selected row\n   * @returns IHourSheet /timesheet get Request from sended date\n   */\n  getTimeSheetDateHourSheetsCurrentMonth(date: any) {\n    return this.http.get<IHourSheet[]>(this.apiUrl + `/timesheet/${date}`);\n  }\n\n  switchBetweenUsersRecordNewUse() {\n     // return this.http.get(this.apiUrl+'/customer');\n     return this.http.get(this.apiUrl+'/assistant');\n    \n  }\n  //#endregion\n\n  //#region assistance\n  /**\n   * @returns table data for the hour sheets\n   */\n  getParticipateRecordNewUse() {\n    return this.http.get<IRequest>(this.apiUrl + '/patask')\n  }\n\n  /**\n   * @returns IRequest paymentmethod\n   */\n  getPasstBonsRecordNewUse() {\n    return this.http.get<IRequest>(this.apiUrl + '/paymentmethod')\n  }\n\n  /**\n   * @returns IRequest assistant\n   */\n  getAssistentRecordNewUse() {\n    return this.http.get<IRequest>(this.apiUrl + '/assistant')\n  }\n\n  getChooseActivitysRecordNewUse() {\n    return this.http.get<IRequest>(this.apiUrl+'/passttask')\n  }\n  //#endregion\n\n  //#region service Point\n\n  //#endregion\n\n  //#region IVA\n\n  //#endregion\n\n}\n","import IbonCreditData from 'src/app/interfaces/ibon-credit-data';\nimport { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-curr-grant',\n  templateUrl: './curr-grant.component.html',\n  styleUrls: ['./curr-grant.component.scss']\n})\nexport class CurrGrantComponent implements OnInit {\n  subpageNavItems : string [] = [\"Guthaben\", \"Bon Archiv\", \"Aktuelle Bewilligung\"];\n  subpageNavRoutes : string [] = [\"/PASSTBonsGuthaben\", \"/PASSTBonsArchiv\", \"/AktuelleBewilligung\"];\n\n  data: IbonCreditData;\n  grantStart:Date = new Date('2020-11-01T03:24:00');\n  grantEnd:Date = new Date('2021-10-31T03:24:00');\n  grantAmountA:number = 500;\n  grantAmountB:number = 500;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<app-title [blueText]=\"'Ihr PASST - '\"  [greyText]=\"'Leistungsbon Bewilligung'\"></app-title>\n\n\n<div class=\"main-container\">\n    <app-tabs-module\n        [getContent]=\"subpageNavItems\"\n        [getLinks]=\"subpageNavRoutes\"\n        ></app-tabs-module>\n    </div>\n\n<div class= \"item-container\">\n    <!-- <app-side-nav-subpages [data] = \"subpageNavItems\" [route] = \"subpageNavRoutes\"></app-side-nav-subpages>  -->\n    <div class = \"green-container\">\n        <div class=\"text\">\n            <h1>Ihre aktuelle Bewilligung der PASST Leistungsbons</h1>\n            <p>Tarif A:&nbsp;{{grantAmountA}}&nbsp;Leistungsbons</p>\n            <p>Tarif B:&nbsp;{{grantAmountB}}&nbsp;Leistungsbons</p>\n            <p>Gültigkeit:&nbsp;{{grantStart.toLocaleDateString()}}&nbsp; - &nbsp;{{grantEnd.toLocaleDateString()}}</p>\n            <p>Ein Leistungsbon ist gültig für eine Stunde Persönliche Assistenz.  Die Leistungsbons können bei der Persönlichen Assistenz Vorarlberg eingelöst werden.</p>\n            <p>Persönliche Assistenz zur Teilhabe am gesellschaftlichen Leben ist eine Leistung des Landes Vorarlberg und wird nach dem Chancengesetz (Integrationshilfe) aus Mitteln des Sozialfonds (Land, Gemeinden) finanziert.</p>\n        </div>\n        \n    </div>\n</div>","//import { RouteToService } from './route-to.service';\nimport { Injectable, OnInit } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorElementsService implements OnInit {\n\n  public buttons: Object;\n\n  constructor() { }//private routeToService: RouteToService\n\n  fullname = window.localStorage.getItem(\"fullName\");;\n\n  ngOnInit(): void {\n\n  }\n\n  onInitActual(buttons) {\n    this.buttons = buttons//this.routeToService.buttons;\n\n    var getSub = window.location.pathname;\n    getSub = (getSub.substr(1));\n    var getId;\n\n    for (var get in this.buttons) {\n      if (getSub == this.buttons[get].click) {\n        getId = get;\n      }\n    }\n\n    var makeActual = { id: getId, click: getSub }\n    //await the send the values\n    setTimeout(() => {\n      if (makeActual.click == \"login\" || makeActual.click==\"\") {\n        this.handleClickHeader({ id: 0, click: 'start' });\n        \n      } else {\n        this.handleClickHeader(makeActual)\n      }\n    }, 0)\n\n  }\n  /* \n  * use the header topbar content with id for the header as id\n  * use the header topbar contnent with click for the side nav as id\n  * on click iterate over the elements with the id and set the color for each elment as gray except the clicked element\n  */\n  handleClickHeader(method: any) {\n    //header\n    for (let count in this.buttons) {\n      document.getElementById(this.buttons[count].id).style.color = \"#6D6E70\";\n    }\n    if (method.id == undefined) {\n      document.getElementById(\"0\").style.color = \"#95c11f\";\n    } else {\n      try {\n        document.getElementById(method.id).style.color = \"#95c11f\";\n      } catch {\n      }\n    }\n    //side nav\n    for (let count in this.buttons) {\n      var getC = Number(count);\n      getC = getC - 1;\n\n      if (getC >= 0) {\n        document.getElementById(this.buttons[getC].click).style.color = \"#6D6E70\";\n      }\n    }\n\n    if (method.click == undefined || method.click == '') {\n      document.getElementById('start').style.color = \"#95c11f\";\n    } else {\n      try {\n        document.getElementById(method.click).style.color = \"#95c11f\";\n      } catch {\n      }\n    }\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() blueText: string;\n  @Input() greyText: string;\n\n  setSpace = \"\";\n\n\n  ngOnInit(): void {\n  \n  }\n}\n","<div  class=\"title\">\n    <mat-label class=\"firstText\" >\n        {{blueText}}\n    </mat-label>\n    <mat-label  class='seccondText'>\n        &nbsp;{{greyText}}\n    </mat-label>\n</div>","import { Injectable } from '@angular/core';\nimport {  ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastsService {\n\n  constructor(private toastr: ToastrService) { }\n\n \n  noCustomer() {\n    this.toastr.error(\"Bitte Kunde auswählen!\")\n  }\n\n  noAssistance() {\n    this.toastr.error(\"Bitte AssistentIn auswählen!\")\n  }\n\n  noStartTime() {\n    this.toastr.error(\"Bitte Start - Zeit überprüfen!\")\n  }\n\n  noStartDate() {\n    this.toastr.error(\"Bitte Start - Datum überprüfen!\")\n  }\n\n  noEndTime() {\n    this.toastr.error(\"Bitte End - Zeit überprüfen!\")\n  }\n\n  noEndDate() {\n    this.toastr.error(\"Bitte End -  Datum überprüfen!\")\n  }\n\n  noActivity() {\n    this.toastr.error(\"Bitte Tätigkeit auswählen!\")\n  }\n\n  noPaastBon() {\n    this.toastr.error(\"Bitte PAAST - Bon auswählen!\")\n  }\n\n  noPaastActivity() {\n    this.toastr.error(\"Bitte PAAST - Activity auswählen!\")\n  }\n\n  startDateLargerEndDate(){\n    this.toastr.error(\"Bitte Start - Datum mit End - Datum überprüfen (darf nicht in der Zukunft liegen)!\")\n  }\n  startEndTimeSame(){\n    this.toastr.error(\"Bitte Start - Zeit mit End - Zeit überprüfen (dürfen nicht die selben sein)!\")\n  }\n\n  seccondDateToFarInTheFuture(){\n    this.toastr.error(\"Bitte überprüfen sie das End -  Datum ob es nicht zu weit in der Zukunft vom Start - Datum liegt.\")\n  }\n/* \n  proveForSure(){\n    this.toastr.warning(\"Bitte überprüfen sie alle Daten in der Tabelle auf Richtigkeit.\")\n  } */\n\n  seccondFormSuccess(){\n    this.toastr.success(\"Daten wurden an den Server übermittelt.\")\n  }\n  \n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { ColumnMode, SelectionType } from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-ngx-table',\n  templateUrl: './ngx-table.component.html',\n  styleUrls: ['./ngx-table.component.scss'],\n})\nexport class NgxTableComponent implements OnInit {\n\n  @ViewChild('myTable') table: any;  //id of the ngx-datatable html\n\n  @Input() setArrow: boolean = true; //set the arrow proberty in table\n\n  @Input() setCheckbox: boolean = false; //set the checkbox proberty in tabel\n\n  @Input() setSelectionType: any = \"single\"; //[checkbox] get the selectiontype for the event with the checkboxes\n\n  @Input() limit: number = 5; //limit the showing rows in the tabel init with 5\n\n  @Input() startLimit: number = 5;\n\n  @Input() endLimit: number = 20;\n\n  @Input() searchOff: boolean = true;\n\n  @Input() set setRows(rows: any) {\n    this.rows = rows;\n    this.temp = rows;\n  }\n\n  @Input() topBarActivated: boolean = true;\n\n  @Input() setColumns = [{ name: '', prop: '', orientation: \"left\" }];\n\n  @Input() setRowDetails = [{ name: '', prop: '' }];\n\n  @Output() rowSelect: EventEmitter<any> = new EventEmitter();\n\n\n  constructor() { }\n\n  rows: any = []; //rows in the table\n\n  temp: any = []; //needet to select/search the rows \n\n  toggledBoth: number = 0; //arrow and row toggled\n\n  limits: any = []; //5-20 in for loop initial\n\n  selected: any = [];\n\n  searchField: string = \"\"; //set value of the searfield\n\n  searchFieldStrings: any = []; //string to show in searchfield\n\n  searchFieldProperties: any = [];  //proberties of the searchfield ONLY 1 Property!!!\n\n  searchFieldPropertyChange: string = \"\"; //string of proberty searchfield\n\n  reminderArrow: boolean; //for the resize event\n\n  reminderCheckbox: boolean; //for the resize event\n\n  /**  Get the detail Page probertys\n  *@param row detail\n  */\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType; // to select one in this case or multi rows on click\n\n  ngOnInit(): void {\n    this.reminderArrow = this.setArrow;\n    this.reminderCheckbox = this.setCheckbox;\n\n    this.proveSize(window.innerWidth); //on init prove the size of the display\n\n    for (var i = this.startLimit; i <= this.endLimit; i++) {\n      this.limits.push(i);\n    }\n\n    //set searchfield proberties in selection and set the first field as the first entry\n    this.setColumns.forEach((data) => {\n      this.searchFieldProperties.push({ name: data.name, prop: data.prop, orientation: data.orientation });\n      this.searchFieldStrings.push(data.name)\n    });\n    this.searchField = this.searchFieldStrings[0];\n    this.searchFieldPropertyChange = this.searchFieldProperties[0].prop;\n  }\n\n  newLimit(getLimit) {\n    this.limit = getLimit;\n  }\n\n  //on arrow click expand the details in the row\n  toggleExpandRow(row) {\n    this.toggledBoth++;\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  /** \n  * @param select switch between single  and checkbox\n  * on row clicked toggled the content \n  */\n  onSelect({ selected }) {\n    this.toggledBoth++;\n    if (this.toggledBoth > 1 && this.setSelectionType == \"single\") {\n    }\n\n    if (this.toggledBoth == 1 && this.setSelectionType == \"single\") {\n      this.rowSelect.emit(selected);\n      this.selected = []; //flush the array if single clicked\n    }\n\n    //if multi and selected is empty after no selction the function call nothing\n    this.toggledBoth = 0;\n\n    if (this.setSelectionType == \"checkbox\") {\n      if (selected.length == 0) {\n        return;\n      }\n      this.rowSelect.emit(selected);\n    }\n  }\n\n  //parse the limit string to an number\n  setLimit(getLimit) {\n    this.limit = getLimit;\n  }\n\n  setSearch(getSearch) {\n    this.searchField = getSearch;\n    this.searchFieldProperties.forEach(element => {\n      if (element.name == getSearch) {\n        this.searchFieldPropertyChange = element.prop;\n      }\n    });\n\n  }\n\n  updateFilter(event: any) {\n\n    const val = event.toLowerCase();\n\n    var propert = this.searchFieldPropertyChange;\n\n    // filter our data\n    const temp = this.temp.filter(function (d) {\n      return d[propert].toString().toLowerCase().indexOf(val) !== -1 || !val;\n    });\n\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n  //if i set it on the top, it initialisates befor setArrow comes up and it throws an error\n  @HostListener('window:resize', ['$event']) //for the resize event\n\n\n  //if window is smaller than 700 pixel then the arrow and checkbox isn't showing else its initial\n  onResize(event) {\n    this.proveSize(event.target.innerWidth)\n  }\n\n  //prove the size of the display on init and on resize\n  proveSize(getWidth) {\n    if (getWidth < 700) {\n      this.setCheckbox = false;\n      this.setArrow = false;\n\n    } else {\n      this.setCheckbox = this.reminderCheckbox;\n      this.setArrow = this.reminderArrow;\n    }\n  }\n}\n","<div class=\"headerTable\">\n\n    <!-- SMALL under 700pixel the elements used to show -->\n    <div *ngIf=\"topBarActivated\" class=\"topBarSmall\">\n        \n <!-- Row selector -->\n      <app-select-field\n       aria-label=\"Zeilen Limit für Tabelle auswählen\" \n       style=\"margin-top: 15px;\"  \n       [title]=\"'Zeilen '+limit\" \n       [value]=\"limits\" \n       [colorSelect]=\"'white'\" \n       (getItem)=\"setLimit($event)\"\n       \n       >\n      </app-select-field>\n\n          <!-- Dropdown Search  -->\n         <app-select-field \n         aria-label=\"Hier kann man die Zeilenauswahl für die Suche auswählen\"  \n         [title]=\"'Auswahl '+searchField\" \n         [value]=\"searchFieldStrings\" \n         [colorSelect]=\"'white'\" \n         (getItem)=\"setSearch($event)\"\n          >\n          </app-select-field>\n\n           <!-- Searchfield -->\n        <app-search-field  \n        class=\"fieldsSmall\" \n        [colorSelect]=\"'white'\" \n        [inputLabel]=\"'Suche (Eingabe)'\"  \n        (getItem)=\"updateFilter($event)\"\n         >\n         </app-search-field>\n      </div>\n  \n  <div *ngIf=\"topBarActivated\" class=\"topBar\">\n  \n  <!-- BIG elements in the topBar if window size is more than 700px -->\n  <div class=\"topBarItems\">\n  \n   <!-- Dropdown Search  -->\n  <app-select-field \n  aria-label=\"Hier kann man die Zeilenauswahl für die Suche auswählen\"  \n  [title]=\"'Auswahl '+searchField\"  \n  [inputOutline]=\"'none'\" \n  [textAlignRight]=\"false\"\n  [textAlign]=\"'center'\"\n  [value]=\"searchFieldStrings\" \n  [colorSelect]=\"'white'\" \n  (getItem)=\"setSearch($event)\"\n  >\n  </app-select-field>\n  \n    <!-- Searchfield -->\n  <app-search-field  \n  (getItem)=\"updateFilter($event)\"  \n  [inputLabel]=\"'Suche (Eingabe)'\" \n  role=\"searchField\"  \n  [textCenter]=\"true\" \n  [colorSelect]=\"'white'\"\n  [inputOutline]=\"'none'\" \n  aria-label=\"Suche Eingabe\"\n  >\n</app-search-field>\n\n  <!-- Row selector selectorDropdown-->\n  <app-select-field [colorSelect]=\"'white'\" aria-label=\"Zeilen Limit für Tabelle auswählen\" [title]=\"'Zeilen '+limit\" [textAlignRight]=\"true\"\n  [value]=\"limits\" (getItem)=\"setLimit($event)\" [inputOutline]=\"'none'\"></app-select-field>\n  \n\n\n  </div>\n  </div>\n  \n  <!-- Table -->\n  <ngx-datatable #myTable\n  class=\"material\"\n  [rows]=\"rows\"\n  [columnMode]=\"ColumnMode.force\"\n  [headerHeight]=\"50\"\n  [footerHeight]=\"50\"\n  rowHeight=\"50\"\n  [limit]=\"limit\"\n  [selected]=\"selected\"\n  (select)=\"onSelect($event)\"\n  [selectionType]= setSelectionType\n  [scrollbarH]=\"false\"\n  [scrollbarV]=\"false\"\n  [gdAlignColumns]=\"'right'\"\n  >\n  \n  <!-- Arrow -->\n   <ngx-datatable-column\n    [width]=\"50\"\n    [resizeable]=\"false\"\n    [sortable]=\"false\"\n    [draggable]=\"false\"\n    [canAutoResize]=\"false\"\n    *ngIf=\"setArrow\"\n    aria-hidden=\"true\" \n  >  \n\n  <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template >\n      <a \n        href=\"javascript:void(0)\"\n        [class.datatable-icon-right]=\"!expanded\"\n        [class.datatable-icon-down]=\"expanded\"\n        title=\"Expand/Collapse Row\"\n        (click)=\"toggleExpandRow(row)\"\n        role=\"columnheader\"\n        aria-hidden=\"true\"\n      >\n      </a>\n    </ng-template>\n  </ngx-datatable-column>\n  \n  <!-- Checkbox -->\n  <ngx-datatable-column\n              [width]=\"50\"\n              [sortable]=\"false\"\n              [canAutoResize]=\"false\"\n              [draggable]=\"false\"\n              [resizeable]=\"false\"\n              *ngIf=\"setCheckbox\"\n              aria-hidden=\"true\"\n            >\n              <ng-template\n                ngx-datatable-header-template\n                let-value=\"value\"\n                let-allRowsSelected=\"allRowsSelected\"\n                let-selectFn=\"selectFn\"\n                role=\"columnheader\"\n              >\n                <input type=\"checkbox\"  aria-hidden=\"true\" [checked]=\"allRowsSelected\" (change)=\"selectFn(!allRowsSelected)\" />\n              </ng-template>\n              <ng-template \n                ngx-datatable-cell-template\n                let-value=\"value\"\n                let-isSelected=\"isSelected\"\n                let-onCheckboxChangeFn=\"onCheckboxChangeFn\"\n                role=\"columnheader\"\n                \n              >\n                <input type=\"checkbox\"  aria-hidden=\"true\" [checked]=\"isSelected\" (change)=\"onCheckboxChangeFn($event)\" />\n              </ng-template>\n            </ngx-datatable-column>\n  \n  \n<!-- template header and body cells -->\n  <ngx-datatable-column  *ngFor=\"let col of setColumns\"  name=\"{{col.name}}\" prop=\"{{col.prop}}\" > <!-- [attr.aria-label]=\"col.name\" -->\n     \n    <!-- header template with orientations -->\n    <ng-template  let-sort=\"sortFn\"  ngx-datatable-header-template>\n      <div  *ngIf=\"col.orientation=='right'\" style=\"text-align: right;\"> <span (click)=\"sort()\" >{{col.name}}</span></div>\n      <div  *ngIf=\"col.orientation=='center'\" style=\"text-align: center;\"> <span (click)=\"sort()\">{{col.name}}</span></div>\n      <div  *ngIf=\"col.orientation=='left'\" style=\"text-align: left;\"><span (click)=\"sort()\">{{col.name}}</span></div>\n    </ng-template> \n\n    <!-- body/cell template with orientations -->\n    <ng-template  let-value=\"value\"  ngx-datatable-cell-template >   \n      <div role=\"cell\" *ngIf=\"col.orientation=='right'\" style=\"text-align: right;\"><span role=\"cell\" [attr.aria-label]=\"col.name\">{{value}}</span></div>\n      <div role=\"cell\" *ngIf=\"col.orientation=='center'\" style=\"text-align: center;\"><span role=\"cell\" [attr.aria-label]=\"col.name\">{{value}}</span></div>\n      <div role=\"cell\" *ngIf=\"col.orientation=='left'\" style=\"text-align: left;\"><span role=\"cell\" [attr.aria-label]=\"col.name\">{{value}}</span></div>\n    </ng-template>\n\n  </ngx-datatable-column>\n\n         <!-- Row Detail Column -->\n         <ngx-datatable-row-detail  [rowHeight]=\"100\" #myDetailRow> \n         <ng-template let-row=\"row\"  let-expanded=\"expanded\" ngx-datatable-row-detail-template>\n     \n           <div  *ngFor=\"let det of setRowDetails\" > \n             <div class=\"rowDetailContent\">\n               <div class=\"rowDetailTitle\">{{det.name}}</div>\n               <div class=\"rowDetailContent\"> {{row[det.prop]}}</div>\n             </div>  \n             </div> \n           </ng-template>\n         </ngx-datatable-row-detail>\n \n  </ngx-datatable>\n  </div>\n  \n\n  <!-- on resize send emitted window \"inner\" size the the backend function -->\n  <div (window:resize)=\"onResize($event)\"></div>\n  <!-- https://github.com/swimlane/ngx-datatable/issues/1468\n  https://github.com/swimlane/ngx-datatable/issues/1667\n  https://www.google.com/search?q=swimlane+datatable+rows+detail+collapse&rlz=1C5CHFA_enAT920AT920&sxsrf=ALeKk001AcB1wNUnhH8jlX5esn6DlIctRA%3A1618943928546&ei=uB9_YKztIJjukgWLp4iIAg&oq=swimlane+datatable+rows+detail+collapse&gs_lcp=Cgdnd3Mtd2l6EAM6BwgjELADECc6BwgAEEcQsAM6BAgjECc6BggAEBYQHjoICCEQFhAdEB46BQghEKABOgQIIRAVOgcIIRAKEKABOgcIIxCwAhAnOgQIIRAKUPg8WP3NAWCx0wFoAXACeACAAaIBiAHyEZIBBDUuMTaYAQCgAQGqAQdnd3Mtd2l6yAEJwAEB&sclient=gws-wiz&ved=0ahUKEwisqZaOvI3wAhUYt6QKHYsTAiEQ4dUDCA8&uact=5\n  a11y=> https://github.com/swimlane/ngx-datatable/commit/39d5b0d699c9dcfdbbe6a38a9ef5f852f0a04489\n  -->","import { RouteToService } from './route-to.service';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Output } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  @Output() getButtons : EventEmitter<any> = new EventEmitter();\n\n  public jwtToken = window.localStorage.getItem(\"jwtToken\");\n  public roleId= window.localStorage.getItem(\"roleId\");\n  public username = window.localStorage.getItem(\"userName\");\n  public userId = window.localStorage.getItem(\"userId\");\n  public fullname = window.localStorage.getItem(\"fullName\");\n\n  constructor( private routeToService: RouteToService,\n    ) { }\n\n  checkJWT() {\n    if (window.localStorage.getItem(\"jwtToken\") != null) {\n      this.getButtons.emit(\"getToken\");\n      this.routeToService.handleClick('home');\n    }\n    else {\n      this.getButtons.emit(\"noToken\");\n      this.routeToService.handleClick('login');\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.scss']\n})\nexport class DatePickerComponent implements OnInit {\n\n  @Input() title: string; //title for the datepicker\n  @Input() disabled: boolean; // toggles the disabled\n\n  @Output() getDate: EventEmitter<string> = new EventEmitter(); //get the time when clicked\n\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  setDate(event) {\n    this.getDate.emit(event.value)\n  }\n\n}\n","<mat-form-field  class=\"calendar\" appearance=\"outline\"> <!-- fill -->\n    <mat-label class=\"label\" >{{title}}</mat-label>\n    <input \n    class=\"input\"\n     (dateInput)=\"setDate($event)\" \n     matInput #datePickerSeccond \n     readonly [disabled]=\"disabled\"\n      [matDatepicker]=\"pickerName\">\n    <mat-datepicker-toggle\n     class=\"icon\" \n     matSuffix [for]=\"pickerName\"\n     ></mat-datepicker-toggle>\n    <mat-datepicker  \n    #pickerName>\n  </mat-datepicker>\n  </mat-form-field>\n\n\n","import { PopupTableComponent } from './popup-table/popup-table.component';\nimport { TimeServiceService } from '../../../services/time-service.service';\nimport { ProveTimeService } from './prove-time.service';\nimport { PaastBonsService } from './paast-bons.service';\nimport { ParticipateService } from './participate.service';\nimport { ChooseActivitiysService } from './choose-activitiys.service';\nimport { CustomersService } from './customers.service';\nimport { ToastsService } from './toasts.service';\nimport { TableDataService } from './table-data.service';\nimport { RouteToService } from '../../../services/route-to.service';\nimport { Component, OnInit } from '@angular/core';\nimport { IValue } from 'src/app/interfaces/IAssignment';\nimport { MatDialog } from '@angular/material/dialog';\n\n//rate=> calculate!!\n@Component({\n  selector: 'app-record-new-use',\n  templateUrl: './record-new-use.component.html',\n  styleUrls: ['./record-new-use.component.scss']\n})\nexport class RecordNewUseComponent implements OnInit {\n\n  roleId: number = parseInt(window.localStorage.getItem('roleId'));\n\n  //to show the inhale and the interface for the table\n  tableDataSource = this.tableData.setData;\n  displayedColumns: string[] = this.tableData.tableInhale;\n\n  assistance: IValue[] = this.customersService.getAssistent();\n  customers = [];\n\n  participate: IValue[] = this.participateService.getParticipate();\n  paastBons: IValue[] = this.paastBonsService.getPaastBons();\n  chooseActivitys: IValue[] = this.chooseActivitysService.getChooseActivitys();\n\n  buttonSave = \"Bestätigen\"; //toggles the text on the button Save\n  selfPayer = false; //for the entry in the database\n\n  getTableData: any;\n\n  datePickFirstDate: Date;\n  datePickerSeccondDate: Date;\n  pickStartTime: string;\n  pickEndTime: string;\n\n  dateTimepickerStart: any;\n  dateTimepickerEnd: any;\n\n  pickActivity: IValue = null;\n  pickPaastBon: IValue = { id: 2, name: \"\" };\n  pickPaastActivity: IValue = { id: 0, name: \"\" };\n\n  pickAssistent: IValue;\n  pickCustomer: IValue;\n\n  isoDateStart: any;\n  isoDateEnd: any;\n\n  askNewDay = true;  // if the startTime from Timepicker is larger than the endTime, the TimePicker seccond is visible \n  participateDisabled = true; //if click on \"teilhabe\" the values can be choosen\n  showTable = false; //shows if the user makes all input the table in the html\n\n\n\n  constructor(\n    private routeToService: RouteToService,\n    private tableData: TableDataService,\n    private toastsService: ToastsService,\n    private customersService: CustomersService,\n    private chooseActivitysService: ChooseActivitiysService,\n    private participateService: ParticipateService,\n    private paastBonsService: PaastBonsService,\n    private proveTimeService: ProveTimeService,\n    private timeService: TimeServiceService,\n    public dialog: MatDialog\n  ) {\n    tableData.refreshTable.subscribe(newTable => {\n      this.getTableData = newTable;\n      this.openDialog();\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * send the table constent end emit the result\n   * @param this.tableDataSource\n   */\n  openDialog() {\n    if (this.dialog.openDialogs.length != 0) return; // not open multible windows in dialog\n\n    this.showTable = true;\n    const dialogRef = this.dialog.open(PopupTableComponent, {\n\n      width: '350px',\n      data: this.getTableData//this.tableDataSource\n\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.showTable = false;\n\n      if (result) {\n        this.clickSave();\n      }\n    });\n  }\n\n  //click the Save button\n  clickValidate() {\n    // let proveTime = false;\n    let proveChoose = false;\n\n    if (this.proveTimeService.checkInputTime(this.dateTimepickerStart, this.dateTimepickerEnd)) { //this.datePickFirstDate, this.datePickerSeccondDate, this.pickStartTime, this.pickEndTime\n      proveChoose = true;\n\n      \n      //refactor the input date and time to a date \n      /* this.isoDateStart = this.timeService.dateToIsoString(this.datePickFirstDate, this.pickStartTime);\n      this.isoDateEnd = this.timeService.dateToIsoString(this.datePickerSeccondDate, this.pickEndTime); */\n\n      this.isoDateStart = this.timeService.dateTimeToIsoString(this.dateTimepickerStart);\n      this.isoDateEnd = this.timeService.dateTimeToIsoString(this.dateTimepickerEnd);\n    \n      switch (this.roleId) {\n        case 2: proveChoose = this.checkInputAssistance(); break;\n        case 3: proveChoose = this.checkInputCustomer(); break;\n      }\n\n      //with participate enabled\n      if (this.participateDisabled == false && proveChoose) {\n        if (this.pickPaastBon.name == \"\") {\n          this.toastsService.noPaastBon();\n          return;\n        }\n\n        if (this.pickPaastActivity.name == \"\") {\n          this.toastsService.noPaastActivity();\n          return;\n        }\n      }\n\n      //prove the input values for the user\n      this.proveSelfPayer(); //to prove the choose of selfpayer to push it to the database\n\n\n      //checks the input for the table\n      if (!this.showTable) { // makes the calcultation only if the user clicks bestätigen\n        switch (this.roleId) {\n          case 2: this.checkInputForTableAssistent(); break;\n          case 3: this.checkInputForTableCustomer(); break;\n        }\n      }\n    }\n  }\n\n  //check the input if the roleId==2\n  checkInputAssistance() {\n    if (this.pickCustomer == undefined) {\n      this.toastsService.noCustomer();\n      return false;\n    }\n    return true;\n  }\n\n  //prove the input if the roleId ==3\n  checkInputCustomer() {\n    if (this.pickAssistent == undefined) {\n      this.toastsService.noAssistance();\n      return;\n    }\n    if (this.pickActivity == undefined) {\n      this.toastsService.noActivity();\n      return;\n    }\n    return true;\n  }\n\n  proveSelfPayer() {\n    if (this.pickPaastBon.name != undefined) {\n      if (this.pickPaastBon.name == \"Selbstzahler\") {\n        this.selfPayer = true;\n      } else {\n        this.selfPayer = false;\n      }\n    }\n  }\n\n  //toggles the choosen participate  for \"Teilhabe\"\n  checkParticipate(selected) {\n    if (selected != undefined) {\n      if (selected.name == \"Teilhabe\") {\n        this.participateDisabled = false;\n      } else {\n        this.participateDisabled = true;\n      }\n    }\n  }\n\n  //push the input for the table\n  checkInputForTableAssistent() {\n  }\n\n  //push the input for the table customer\n  checkInputForTableCustomer() {\n    this.customersService.checkInputForTable(this.pickAssistent.id, this.pickActivity.id,\n      this.pickPaastBon.id, this.pickPaastActivity.id,\n      this.isoDateStart, this.isoDateEnd);\n  }\n\n  clickAbord() {\n    this.routeToService.handleClick('start');\n  }\n\n  clickSave() {\n    //push the validation id to the server\n    this.customersService.pushInput();\n  }\n}","\n  <app-title [blueText]=\"'Neuen Einsatz'\" [greyText]=\"'erfassen'\"></app-title>\n\n  <div class=\"main-container\">\n  <div [ngClass]=\"{'disable-click': showTable}\" class=\"green-container\">\n    <div class=\"shelf\">\n    \n\n      <!-- pick employee -->\n      <app-select-field \n      *ngIf=\"roleId==3\" \n      [title]=\"'KundIn wählen:'\" \n      (getItem)=\"pickCustomer=$event\" \n      [disabled]=\"false\"\n      [value]=\"customer\"\n      [colorSelect]=\"'white'\"\n      >\n      </app-select-field>\n\n      <!-- pick client -->\n      <app-select-field\n       *ngIf=\"roleId==2\" \n       [title]=\"'AssistentIn wählen:'\" \n       (getItem)=\"pickAssistent=$event\"\n       [disabled]=\"false\" \n       [value]=\"assistance\" \n       [getkeyval]=\"'fullName'\"\n       [colorSelect]=\"'white'\"\n      >\n      </app-select-field>\n\n      \n      <!-- start time date -->\n      <app-ngx-date-time-picker\n      [colorPicker]=\"'white'\"\n      [placeHolder]=\"'Uhrzeit Start'\"\n      (getDateTime)=\"dateTimepickerStart=($event)\"\n      [setTouchUi]=\"true\"\n      ></app-ngx-date-time-picker>\n\n     \n     <!-- end time date -->\n      <app-ngx-date-time-picker\n      [colorPicker]=\"'white'\"\n      [placeHolder]=\"'Uhrzeit Ende'\"\n      (getDateTime)=\"dateTimepickerEnd=($event)\"\n      [setTouchUi]=\"true\"\n      ></app-ngx-date-time-picker>\n      </div>\n\n      <div class=\"shelf\">\n      <!-- pick activity -->\n      <!-- get item two Times because first in variable seccond toggles Teilhabe in function -->\n      <app-select-field *ngIf=\"roleId==2\" [colorSelect]=\"'white'\" [title]=\"'Tätigkeit wählen:'\" (getItem)=\"pickActivity=($event)\"\n        (getItem)=\"checkParticipate($event)\" [disabled]=\"false\" [value]=\"participate\" [getkeyval]=\"'name'\">\n      </app-select-field>\n\n      <app-select-field *ngIf=\"roleId==2\" [colorSelect]=\"'white'\" [title]=\"'Passt - Bon:'\" (getItem)=\"pickPaastBon=($event)\"\n        [disabled]=\"participateDisabled\" [value]=\"paastBons\" [getkeyval]=\"'name'\"></app-select-field>\n\n      <!-- paast activity -->\n      <app-select-field *ngIf=\"roleId==2\" [colorSelect]=\"'white'\" [title]=\"'Passt - Tätigkeiten:'\" (getItem)=\"pickPaastActivity=($event)\"\n        [disabled]=\"participateDisabled\" [value]=\"chooseActivitys\" [getkeyval]=\"'name'\"></app-select-field>\n    </div>\n  </div>\n</div>\n  \n<div class=\"buttonButtom\">\n    <app-basic-button id=\"aboard\" [btnText]=\"'Abbrechen'\" [btnColor]=\"'colorGrey'\" (clickFunction)=\"clickAbord()\"\n      [btnDisabled]=\"false\"></app-basic-button>\n\n    <!-- <app-basic-button id=\"edit\" *ngIf=\"showTable\" [btnText]=\"'Bearbeiten'\" [btnColor]=\"'colorGrey'\"\n      (clickFunction)=\"clickEdit()\" [btnDisabled]=\"clickPlaceholder()\"></app-basic-button>  --> \n\n    <app-basic-button id=\"save\" [btnText]=\"'Bestätigen'\" [btnColor]=\"'colorGreen'\" (clickFunction)=\"clickValidate()\"\n      [btnDisabled]=\"false\"><!-- buttonSave -->\n    </app-basic-button>\n  <!-- buttons at the button of the green field -->\n  \n</div>","import { FormDataService } from './form-data.service';\nimport { HourSheetsdetailService } from './hour-sheetsdetail.service';\nimport { GenerateExcelService } from './../../../services/generate-excel.service';\nimport { TimeServiceService } from './../../../services/time-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { IHourSheet, IDeclarationHourSheets, IExcelHourSheetsAssistance, IExcelHourSheetsDetail } from '../../../interfaces/IAssignment';\nimport { IExcelHourSheetsCustomer } from '../../../interfaces/IAssignment';\nimport { environment } from 'src/environments/environment';\nimport { ToastsService } from './toasts.service';\nimport { GetService } from '../../Requests/get.service';\n\n@Component({\n  selector: 'app-hour-sheets-archive',\n  templateUrl: './hour-sheets-archive.component.html',\n  styleUrls: ['./hour-sheets-archive.component.scss']\n})\nexport class HourSheetsArchiveComponent implements OnInit {\n\n  apiUrl = environment.apiUrl;\n\n  excelBody: IDeclarationHourSheets[] = [];\n\n  getData: IHourSheet[] = [];\n\n  roleId: number = parseInt(window.localStorage.getItem('roleId'));\n\n  tableClickable: boolean = true;\n\n  setCheckbox: boolean = false;\n\n  setSelectionType: string = \"single\";\n\n  setColumns: any;\n\n  setRowDetails: any;\n\n  getSelectedRows: any;\n\n  // Variables for side-nav\n  subpageNavItems: string[] = [\"Stundenblätter aktuell\", \"Stundenblätter Archiv\"];\n  subpageNavRoutes: string[] = [\"/stundenblaetterAktuellerMonat\", \"/stundenblaetterArchiv\",];\n\n  constructor(\n    private timeService: TimeServiceService,\n    private generateExcelService: GenerateExcelService,\n    private hourSheetsDetail: HourSheetsdetailService,\n    private formData: FormDataService,\n    private toastsService: ToastsService,\n    private getService: GetService\n  ) {\n    hourSheetsDetail.refreshTable.subscribe(newTable => {\n      //this.rowData = newTable;\n      this.rows = [];\n      newTable.forEach(element => {\n        this.rows.push(element);\n      });\n    })\n\n  }\n\n  ngOnInit(): void {\n    this.generateFirstInput();\n  }\n\n  setRows() {\n    return this.rows;\n  }\n\n  rows: any = new Array<any>();\n\n  /**\n   * get the data from the timesheet url and fetch it in the getData\n   * then form it with the formData-Service to an String element\n   */\n  generateFirstInput() {\n\n    this.setColumns = [\n      { name: 'Jahr', prop: 'year', orientation: \"left\" },\n      { name: 'Monat', prop: 'month', orientation: \"left\" },\n      { name: 'Einträge', prop: 'number', orientation: \"center\" },\n\n    ];\n\n    this.setRowDetails = [\n      { name: 'N', prop: \"N\" },\n      { name: 'WE', prop: 'WE' },\n      { name: 'NA', prop: 'NA' },\n      { name: 'NP1', prop: 'NP2' },\n      { name: 'NP2', prop: 'NP2' },\n      { name: 'BonA', prop: 'BonA' },\n      { name: 'BonB', prop: 'BonB' }\n    ];\n    this.switchBetweenUsers();\n\n    this.tableClickable = true;\n    this.setCheckbox = false;\n    this.setSelectionType = \"single\";\n    var getData = [];\n\n    this.getService.getTimeSheetHourSheetesCurrentMonth()\n      .toPromise()\n      .then((data) => {\n        // this.agGrid.api.setRowData(data);\n        data.forEach(element => {\n          getData.push(element)\n        })\n      })\n      .then(() => {\n        this.convertFirstInput(getData)\n      })\n  }\n\n  convertFirstInput(getData) {\n    var setData: IDeclarationHourSheets[] = [];\n    getData.forEach((data) => {\n      var formData = this.formData.idsToNames(data);\n      setData.push({\n        year: this.timeService.convertEnglishTime(data.timeSpan, true), month: this.timeService.convertEnglishTime(data.timeSpan, false), number: data.number, customerCost: this.formData.round2Commas(data.customerCost),\n        assistantCost: this.formData.round2Commas(data.assistantCost),\n        N: formData.N, WE: formData.WE, NA: formData.NA, NP1: formData.NP1,\n        NP2: formData.NP2, BonA: formData.BonA, BonB: formData.BonB, timeToPush: data.timeSpan\n      });\n    })\n    this.rows = setData;\n  }\n\n  /**\n   * @param roleId generate an array of userser peek the role id\n   */\n  switchBetweenUsers() {\n    switch (this.roleId) {\n      case 2: this.setColumns.push({ name: 'Kosten in €', prop: 'assistantCost', orientation: \"right\" });\n        break;\n      case 3: this.setColumns.push({ name: 'Kosten in €', prop: 'customerCost', orientation: \"right\" });\n        break;\n      default: break;\n    }\n  }\n\n  /**\n   * \n   * @param data getSelected Rows setCheckbox tableClickable \n   * the first click start the new Table event the seccond and multiclick start the download button\n   */\n  getRowClicked(data) {\n    this.generateSeccondInput();\n    var getPushDate = data[0].timeToPush;\n    if (this.tableClickable) {\n      this.getService.getTimeSheetDateHourSheetsCurrentMonth(getPushDate)\n        .toPromise()\n        .then(data => {\n          this.hourSheetsDetail.generateInputs(data, this.roleId);\n\n        })\n        .then(() => {\n          this.setCheckbox = true;\n          this.setSelectionType = \"checkbox\";\n          this.tableClickable = false;\n        })\n\n    } else {\n      this.getSelectedRows = data;\n    }\n  }\n  generateSeccondInput() {\n\n    this.setColumns = [\n      { name: 'Name', prop: 'fullName', orientation: \"left\" },\n      { name: 'Einträge', prop: 'number', orientation: \"center\" },\n      { name: 'Betrag in €', prop: 'cost', orientation: \"right\" }\n    ];\n\n    this.setRowDetails = [\n      { name: 'N', prop: \"N\" },\n      { name: 'WE', prop: 'WE' },\n      { name: 'NA', prop: 'NA' },\n      { name: 'NP1', prop: 'NP2' },\n      { name: 'NP2', prop: 'NP2' },\n      { name: 'BonA', prop: 'BonA' },\n      { name: 'BonB', prop: 'BonB' }\n    ];\n  }\n\n  //get the selected Row(s) with the checkbox clicked and the the download button\n  rowsToExcel() {\n    // const selectedNodes = this.agGridComponent.getSelectedRows();\n    var header = [];\n    var excelBody = [];\n    var rowSelected= true;\n\n    var excelAssistant: IExcelHourSheetsAssistance;\n    var excelCustomer: IExcelHourSheetsCustomer;\n    var excelDetail: IExcelHourSheetsDetail;\n\n    this.setColumns.forEach(data => {\n      header.push(data.name);\n    })\n    this.setRowDetails.forEach(data => {\n      header.push(data.name);\n    })\n\n    // selectedNodes.forEach((data: any) => {\n    /* switch (this.tableClickable) {\n      case true:\n        switch (this.roleId) {\n          case 2:\n            this.getSelectedRows.forEach((data: IExcelHourSheetsAssistance) => {\n              excelAssistant =\n              {\n                year: data.year,\n                month: data.month,\n                number: data.number,\n                assistantCost: data.assistantCost,\n                N: data.N,\n                WE: data.WE,\n                NA: data.NA,\n                NP1: data.NP1,\n                NP2: data.NP2,\n                BonA: data.BonA,\n                BonB: data.BonB\n              }\n              excelBody.push(Object.values(excelAssistant));\n\n            });\n            break;\n          case 3:\n            this.getSelectedRows.forEach((data: IExcelHourSheetsCustomer) => {\n              excelCustomer =\n              {\n                year: data.year,\n                month: data.month,\n                number: data.number,\n                customerCost: data.customerCost,\n                N: data.N,\n                WE: data.WE,\n                NA: data.NA,\n                NP1: data.NP1,\n                NP2: data.NP2,\n                BonA: data.BonA,\n                BonB: data.BonB,\n              }\n              excelBody.push(Object.values(excelCustomer));\n            });\n            break;\n        }\n        break;\n      case false: */\n    try {\n      this.getSelectedRows.forEach((data: IExcelHourSheetsDetail) => {\n        excelDetail =\n        {\n          fullName: data.fullName,\n          number: data.number,\n          cost: data.cost,\n          N: data.N,\n          WE: data.WE,\n          NA: data.NA,\n          NP1: data.NP1,\n          NP2: data.NP2,\n          BonA: data.BonA,\n          BonB: data.BonB\n        }\n        excelBody.push(Object.values(excelDetail));\n        rowSelected=true;\n      })\n    } catch {\n      this.toastsService.noRowSelected();\n      rowSelected=false;\n    } finally {\n      if(rowSelected){\n        this.generateExcelService.generateExcel(header, excelBody);\n      }\n    }\n  }\n\n  \n}\n","\n<app-title [blueText]=\"'Stundenblätter'\"  [greyText]=\"'Archiv'\"></app-title>\n\n<div class=\"main-container\">\n    <app-tabs-module\n    [getContent]=\"subpageNavItems\"\n    [getLinks]=\"subpageNavRoutes\"\n    ></app-tabs-module>\n<div class=\"table\" *ngIf=\"!tableClickable\">\n    \n <app-ngx-table \n [setArrow]=\"true\" \n [setCheckbox]=\"true\"\n [setSelectionType]=\"setSelectionType\"  \n [setColumns]=\"setColumns\" \n [setRowDetails]=\"setRowDetails\"\n (rowSelect)=\"getRowClicked($event)\" \n [searchOff]=\"false\" \n [startLimit]=\"2\" \n [endLimit]=\"20\" \n [setRows]=\"setRows()\">\n</app-ngx-table> \n\n<br>\n </div>\n\n<div class=\"table\" *ngIf=\"tableClickable\">\n <app-ngx-table [setArrow]=\"true\" [setCheckbox]=\"false\"\n [setSelectionType]=\"setSelectionType\"  [setColumns]=\"setColumns\" [setRowDetails]=\"setRowDetails\"\n (rowSelect)=\"getRowClicked($event)\" [searchOff]=\"false\" [startLimit]=\"2\" [endLimit]=\"20\" [setRows]=\"setRows()\">\n</app-ngx-table> \n </div>\n \n<div class=\"buttonButtom\">\n    <app-basic-button id=\"aboard2\" *ngIf=\"!tableClickable\" [btnText]=\"'Zurück'\" [btnColor]=\"'colorGrey'\"\n        (clickFunction)=\"generateFirstInput()\"></app-basic-button>\n    <app-basic-button id=\"aboard\" *ngIf=\"!tableClickable\" [btnText]=\"'Download'\" [btnColor]=\"'colorGreen'\"(clickFunction)=\"rowsToExcel()\"\n       ></app-basic-button> \n</div>\n","import { GetService } from './../../Requests/get.service';\nimport { FormDataService } from './form-data.service';\nimport { IExcelHourSheetsDetail, IValue } from 'src/app/interfaces/IAssignment';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { IAssistant, ICustomer } from './../../../interfaces/IUser';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HourSheetsdetailService {\n\n  @Output() refreshTable: EventEmitter<any> = new EventEmitter();\n\n  apiUrl = environment.apiUrl;\n\n  roleId: number;\n  columnDefs = [];\n  getData: any;\n  getUsers: any;\n  constructor(private getService: GetService,\n    private formData: FormDataService) { }\n\n  generateInputs(getData, roleId) {\n    this.columnDefs = [];\n    this.roleId = roleId;\n\n    this.getData = getData;\n    this.switchBetweenUsers();\n  }\n\n\n  switchBetweenUsers() {\n    this.getUsers = [];\n    this.getService.switchBetweenUsersRecordNewUse()\n      .toPromise()\n      .then((data: IAssistant) => {\n        data.value.forEach(element => {\n          this.getUsers.push(element)\n        });\n      })\n      .then(() => {\n        this.buildData();\n      });\n  }\n\n  //build the data for the table\n  buildData() {\n    var setData = [];\n    var sheetData: IExcelHourSheetsDetail;\n\n    this.getData.forEach(element => {\n      var cost: string = \"\";\n      var setUser: string;\n      var number: number;\n      var formData = this.formData.idsToNames(element); //form the getting date id`s to the elements N, NP1....\n\n      switch (this.roleId) {\n        case 2: cost = element.assistantCost;\n          break;\n        case 3: cost = element.customerCost;\n          break;\n        default: break;\n      }\n\n      //form the user Id to the username from the server \n      number = element.number;\n      this.getUsers.forEach((user: IValue) => {\n        if (user.id == element.id) {\n          setUser = user.fullName;\n        }\n      });\n\n      //builds the object for the excel\n      sheetData = {\n        N: formData.N,\n        WE: formData.WE,\n        NA: formData.NA,\n        NP1: formData.NP1,\n        NP2: formData.NP2,\n        BonA: formData.BonA,\n        BonB: formData.BonB,\n        number: number,\n        cost: this.formData.round2Commas(cost),\n        fullName: setUser,\n      }\n      setData.push(sheetData);\n    })\n    this.refreshTable.emit(setData);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {  ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastsService {\n\n  constructor(private toastr: ToastrService) { }\n\n\n  noRowSelected(){\n    this.toastr.error(\"Bitte wählen Sie mindestens eine Zeile aus für den Download.\")\n  }\n  \n}\n","import { GetService } from './../../Requests/get.service';\nimport { FormDataService } from './form-data.service';\nimport { IExcelHourSheetsDetail, IValue } from 'src/app/interfaces/IAssignment';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { IAssistant, ICustomer } from './../../../interfaces/IUser';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HourSheetsdetailService {\n\n  @Output() refreshTable: EventEmitter<any> = new EventEmitter();\n\n  apiUrl = environment.apiUrl;\n\n  roleId: number;\n  columnDefs = [];\n  getData: any;\n  getUsers: any;\n  constructor(private getService: GetService,\n    private formData: FormDataService) { }\n\n  generateInputs(getData, roleId) {\n    this.columnDefs = [];\n    this.roleId = roleId;\n\n    this.getData = getData;\n    this.switchBetweenUsers();\n  }\n \n\n  switchBetweenUsers() {\n    \n        this.getUsers = [];\n        this.getService.switchBetweenUsersRecordNewUse()\n          .toPromise()\n          .then((data: IAssistant) => {\n            data.value.forEach(element => {\n              this.getUsers.push(element)\n            });\n          })\n          .then(() => {\n               this.buildData();\n          });\n    }\n  \n\n  //build the data for the table\n  buildData() {\n    var setData = [];\n    var sheetData: IExcelHourSheetsDetail;\n\n    this.getData.forEach(element => {\n      var cost: string = \"\";\n      var setUser: string;\n      var number: number;\n      var formData = this.formData.idsToNames(element); //form the getting date id`s to the elements N, NP1....\n\n      switch (this.roleId) {\n        case 2: cost = element.assistantCost;\n          break;\n        case 3: cost = element.customerCost;\n          break;\n        default: break;\n      }\n\n      //form the user Id to the username from the server \n      number = element.number;\n      this.getUsers.forEach((user: IValue) => {\n        if (user.id == element.id) {\n          setUser = user.fullName;\n        }\n      });\n\n      //builds the object for the excel\n      sheetData = {\n        N: formData.N,\n        WE: formData.WE,\n        NA: formData.NA,\n        NP1: formData.NP1,\n        NP2: formData.NP2,\n        BonA: formData.BonA,\n        BonB: formData.BonB,\n        number: number,\n        cost: this.formData.round2Commas(cost),\n        fullName: setUser,\n      }\n      setData.push(sheetData);\n    })\n       this.refreshTable.emit(setData);\n  }\n \n}\n","import { ColorElementsService } from './color-elements.service';\nimport { topBarInhales } from './../components/header/topbarInhale';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteToService {\n\n  buttons: any;\n\n  roleId: string = localStorage.getItem('roleId');\n\n  @Output() getButtons: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private router: Router,\n    private colorService:ColorElementsService\n  ) { }\n\n\n  getIdFromLib = 0;\n\n  /* with the roleId switches the three different header items in the topbarinhals.ts file */\n  generateButtons(roleId) {\n    var getRole = parseInt(roleId);\n    switch (getRole) {\n      case 1: this.buttons = topBarInhales.topBarInhales1; break;\n      case 2: this.buttons = topBarInhales.topBarInhales2; break;\n      case 3: this.buttons = topBarInhales.topBarInhales3; break;\n      default: this.buttons = []; break; //needs an empty array to show no items in the header component\n    }\n    this.colorService.onInitActual(this.buttons);\n  }\n\n  //emits the change in the auth service to toggle the items in the header in the routToService component with the diffenent arrays\n  proveButtons(but:string) {\n    if (but == \"getToken\") {\n      this.roleId = localStorage.getItem('roleId');\n      this.generateButtons(this.roleId);\n      this.colorService.onInitActual(this.buttons);\n    \n    }\n\n    if (but == \"noToken\") {\n      this.roleId = localStorage.getItem('roleId');\n      this.generateButtons(this.roleId);\n     \n    }\n  }\n  refresh() {\n    this.roleId = localStorage.getItem('roleId');\n    this.generateButtons(this.roleId);\n  }\n\n/**\n * get the route as a string\n * foreach buttons and send the button with the click equals to route to the color Service\n * @param route \n */\n  handleClick(route: string) {\n    try {\n      this.router.navigate([`/${route}`]);\n      if (route != \"login\") {\n        this.buttons.forEach(element => {\n          if(element.click==route){\n            this.colorService.handleClickHeader(element);\n          }\n        });\n      }\n    } catch {\n      console.log(\"url not found\")\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IValue } from '../../../interfaces/IAssignment';\nimport { GetService } from '../../Requests/get.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ParticipateService {\n\n  apiUrl = environment.apiUrl;\n\n  //participate: string[] = ['Pflege / Grundbedürfnisse', 'Leben zu Hause / Haushaltsf.', 'Teilhabe', 'Lebensorganisation'];\n  // participate: string[] = [];\n  participate: IValue[] = [];\n\n  constructor(private getService: GetService) { }\n\n  getParticipate() {\n    this.participate = [];\n    this.getService.getParticipateRecordNewUse()\n      .toPromise()\n      .then(data => {\n        data.value.forEach(element => {\n          this.participate.push(element);\n        }),\n          error => {\n            console.log(error);\n          };\n      });\n    return this.participate;\n  }\n}\n","export enum SideNavDirection{\n    Left= 'left',\n    Right = 'right'\n}\n","import { PASSTBonsArchiveComponent } from './sites/customer/passtbons-archive/passtbons-archive.component';\nimport { CurrGrantComponent } from './sites/customer/curr-grant/curr-grant.component';\nimport { PASSTBonsComponent } from './sites/customer/passtbons/passtbons.component';\nimport { HourSheetsCurrentMonthComponent } from './sites/customer/hour-sheets-current-month/hour-sheets-current-month.component';\n\nimport { ConfirmUseComponent } from './sites/customer/confirm-use/confirm-use.component';\nimport { RecordNewUseComponent } from './sites/assistance/record-new-use/record-new-use.component';\nimport { HomeComponent } from './sites/generally/home/home.component';\nimport { LoginComponent } from './sites/generally/login/login.component';\nimport { NgModule, Component } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HourSheetsArchiveComponent } from './sites/customer/hour-sheets-archive/hour-sheets-archive.component';\nimport { UserSettingsComponent } from './sites/generally/user-settings/user-settings.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'start', component: HomeComponent },\n  { path: 'neuenEinsatzErfassen', component: RecordNewUseComponent },\n  { path: 'neuenEinsatzBestaetigen', component: ConfirmUseComponent },\n  { path: 'PASSTBonsArchiv', component: PASSTBonsArchiveComponent },\n  { path: 'PASSTBonsGuthaben', component: PASSTBonsComponent },\n  { path: 'AktuelleBewilligung', component: CurrGrantComponent },\n  { path: 'stundenblaetterAktuellerMonat', component: HourSheetsCurrentMonthComponent },\n  { path: 'stundenblaetterArchiv', component: HourSheetsArchiveComponent },\n  { path: 'benutzereinstellungen', component: UserSettingsComponent },\n  { path: '**', component: HomeComponent }, //set it to the last place!! use as a fallback to unknown routes\n\n\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { FormDataService } from './form-data.service';\nimport { HourSheetsdetailService } from './hour-sheetsdetail.service';\nimport { GenerateExcelService } from './../../../services/generate-excel.service';\nimport { TimeServiceService } from './../../../services/time-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { IHourSheet, IDeclarationHourSheets, IExcelHourSheetsAssistance, IExcelHourSheetsDetail } from '../../../interfaces/IAssignment';\nimport { IExcelHourSheetsCustomer } from '../../../interfaces/IAssignment';\nimport { environment } from 'src/environments/environment';\nimport { ToastsService } from './toasts.service';\nimport { GetService } from '../../Requests/get.service';\n\n@Component({\n  selector: 'app-hour-sheets-current-month',\n  templateUrl: './hour-sheets-current-month.component.html',\n  styleUrls: ['./hour-sheets-current-month.component.scss']\n})\n\n\nexport class HourSheetsCurrentMonthComponent implements OnInit {\n\n  apiUrl = environment.apiUrl;\n\n  excelBody: IDeclarationHourSheets[] = [];\n\n  getData: IHourSheet[] = [];\n\n  roleId: number = parseInt(window.localStorage.getItem('roleId'));\n\n  tableClickable: boolean = true;\n\n  setCheckbox: boolean = false;\n\n  setSelectionType: string = \"single\";\n\n  setColumns: any;\n\n  setRowDetails: any;\n\n  getSelectedRows: any;\n\n  // Variables for side-nav\n  subpageNavItems: string[] = [\"Stundenblätter aktuell\", \"Stundenblätter Archiv\"];\n  subpageNavRoutes: string[] = [\"/stundenblaetterAktuellerMonat\", \"/stundenblaetterArchiv\",];\n\n  constructor(\n    private timeService: TimeServiceService,\n    private generateExcelService: GenerateExcelService,\n    private hourSheetsDetail: HourSheetsdetailService,\n    private formData: FormDataService,\n    private toastsService: ToastsService,\n    private getService: GetService\n  ) {\n    hourSheetsDetail.refreshTable.subscribe(newTable => {\n      //this.rowData = newTable;\n      this.rows = [];\n      newTable.forEach(element => {\n        this.rows.push(element);\n      });\n    })\n\n  }\n\n  ngOnInit(): void {\n    this.generateFirstInput();\n  }\n\n  setRows() {\n    return this.rows;\n  }\n\n  rows: any = new Array<any>();\n\n  /**\n   * get the data from the timesheet url and fetch it in the getData\n   * then form it with the formData-Service to an String element\n   */\n  generateFirstInput() {\n\n    this.setColumns = [\n      { name: 'Jahr', prop: 'year', orientation: \"left\" },\n      { name: 'Monat', prop: 'month', orientation: \"left\" },\n      { name: 'Einträge', prop: 'number', orientation: \"center\" },\n\n    ];\n\n    this.setRowDetails = [\n      { name: 'N', prop: \"N\" },\n      { name: 'WE', prop: 'WE' },\n      { name: 'NA', prop: 'NA' },\n      { name: 'NP1', prop: 'NP2' },\n      { name: 'NP2', prop: 'NP2' },\n      { name: 'BonA', prop: 'BonA' },\n      { name: 'BonB', prop: 'BonB' }\n    ];\n    this.switchBetweenUsers();\n\n    this.tableClickable = true;\n    this.setCheckbox = false;\n    this.setSelectionType = \"single\";\n    var getData = [];\n\n    this.getService.getTimeSheetHourSheetesCurrentMonth()\n      .toPromise()\n      .then((data) => {\n        // this.agGrid.api.setRowData(data);\n        data.forEach(element => {\n          getData.push(element)\n        })\n      })\n      .then(() => {\n        this.convertFirstInput(getData)\n      })\n  }\n\n  convertFirstInput(getData) {\n    var setData: IDeclarationHourSheets[] = [];\n    getData.forEach((data) => {\n      var formData = this.formData.idsToNames(data);\n      setData.push({\n        year: this.timeService.convertEnglishTime(data.timeSpan, true), month: this.timeService.convertEnglishTime(data.timeSpan, false), number: data.number, customerCost: this.formData.round2Commas(data.customerCost),\n        assistantCost: this.formData.round2Commas(data.assistantCost),\n        N: formData.N, WE: formData.WE, NA: formData.NA, NP1: formData.NP1,\n        NP2: formData.NP2, BonA: formData.BonA, BonB: formData.BonB, timeToPush: data.timeSpan\n      });\n    })\n    this.rows = setData;\n  }\n\n  /**\n   * @param roleId generate an array of userser peek the role id\n   */\n  switchBetweenUsers() {\n    switch (this.roleId) {\n      case 2: this.setColumns.push({ name: 'Kosten in €', prop: 'assistantCost', orientation: \"right\" });\n        break;\n      case 3: this.setColumns.push({ name: 'Kosten in €', prop: 'customerCost', orientation: \"right\" });\n        break;\n      default: break;\n    }\n  }\n\n  /**\n   * \n   * @param data getSelected Rows setCheckbox tableClickable \n   * the first click start the new Table event the seccond and multiclick start the download button\n   */\n  getRowClicked(data) {\n    this.generateSeccondInput();\n    var getPushDate = data[0].timeToPush;\n    if (this.tableClickable) {\n      this.getService.getTimeSheetDateHourSheetsCurrentMonth(getPushDate)\n        .toPromise()\n        .then(data => {\n          this.hourSheetsDetail.generateInputs(data, this.roleId);\n\n        })\n        .then(() => {\n          this.setCheckbox = true;\n          this.setSelectionType = \"checkbox\";\n          this.tableClickable = false;\n        })\n\n    } else {\n      this.getSelectedRows = data;\n    }\n  }\n  generateSeccondInput() {\n\n    this.setColumns = [\n      { name: 'Name', prop: 'fullName', orientation: \"left\" },\n      { name: 'Einträge', prop: 'number', orientation: \"center\" },\n      { name: 'Betrag €', prop: 'cost', orientation: \"right\" }\n    ];\n\n    this.setRowDetails = [\n      { name: 'N', prop: \"N\" },\n      { name: 'WE', prop: 'WE' },\n      { name: 'NA', prop: 'NA' },\n      { name: 'NP1', prop: 'NP2' },\n      { name: 'NP2', prop: 'NP2' },\n      { name: 'BonA', prop: 'BonA' },\n      { name: 'BonB', prop: 'BonB' }\n    ];\n  }\n\n  //get the selected Row(s) with the checkbox clicked and the the download button\n  rowsToExcel() {\n    // const selectedNodes = this.agGridComponent.getSelectedRows();\n    var header = [];\n    var excelBody = [];\n    var rowSelected= true;\n\n    var excelAssistant: IExcelHourSheetsAssistance;\n    var excelCustomer: IExcelHourSheetsCustomer;\n    var excelDetail: IExcelHourSheetsDetail;\n\n    this.setColumns.forEach(data => {\n      header.push(data.name);\n    })\n    this.setRowDetails.forEach(data => {\n      header.push(data.name);\n    })\n\n    // selectedNodes.forEach((data: any) => {\n    /* switch (this.tableClickable) {\n      case true:\n        switch (this.roleId) {\n          case 2:\n            this.getSelectedRows.forEach((data: IExcelHourSheetsAssistance) => {\n              excelAssistant =\n              {\n                year: data.year,\n                month: data.month,\n                number: data.number,\n                assistantCost: data.assistantCost,\n                N: data.N,\n                WE: data.WE,\n                NA: data.NA,\n                NP1: data.NP1,\n                NP2: data.NP2,\n                BonA: data.BonA,\n                BonB: data.BonB\n              }\n              excelBody.push(Object.values(excelAssistant));\n\n            });\n            break;\n          case 3:\n            this.getSelectedRows.forEach((data: IExcelHourSheetsCustomer) => {\n              excelCustomer =\n              {\n                year: data.year,\n                month: data.month,\n                number: data.number,\n                customerCost: data.customerCost,\n                N: data.N,\n                WE: data.WE,\n                NA: data.NA,\n                NP1: data.NP1,\n                NP2: data.NP2,\n                BonA: data.BonA,\n                BonB: data.BonB,\n              }\n              excelBody.push(Object.values(excelCustomer));\n            });\n            break;\n        }\n        break;\n      case false: */\n    try {\n      this.getSelectedRows.forEach((data: IExcelHourSheetsDetail) => {\n        excelDetail =\n        {\n          fullName: data.fullName,\n          number: data.number,\n          cost: data.cost,\n          N: data.N,\n          WE: data.WE,\n          NA: data.NA,\n          NP1: data.NP1,\n          NP2: data.NP2,\n          BonA: data.BonA,\n          BonB: data.BonB\n        }\n        excelBody.push(Object.values(excelDetail));\n        rowSelected=true;\n      })\n    } catch {\n      this.toastsService.noRowSelected();\n      rowSelected=false;\n    } finally {\n      if(rowSelected){\n        this.generateExcelService.generateExcel(header, excelBody);\n      }\n    }\n  }\n}\n\n","<app-title [blueText]=\"'Stundenblätter'\" [greyText]=\"'aktueller Monat'\"></app-title>\n\n<div class=\"main-container\">\n    <app-tabs-module\n    [getContent]=\"subpageNavItems\"\n    [getLinks]=\"subpageNavRoutes\"\n    ></app-tabs-module>\n<div class=\"table\" *ngIf=\"!tableClickable\">\n    \n <app-ngx-table \n [setArrow]=\"true\" \n [setCheckbox]=\"true\"\n [setSelectionType]=\"setSelectionType\"  \n [setColumns]=\"setColumns\" \n [setRowDetails]=\"setRowDetails\"\n (rowSelect)=\"getRowClicked($event)\" \n [searchOff]=\"false\" \n [startLimit]=\"2\" \n [endLimit]=\"20\" \n [setRows]=\"setRows()\">\n</app-ngx-table> \n\n<br>\n </div>\n\n<div class=\"table\" *ngIf=\"tableClickable\">\n <app-ngx-table [setArrow]=\"true\" [setCheckbox]=\"false\"\n [setSelectionType]=\"setSelectionType\"  [setColumns]=\"setColumns\" [setRowDetails]=\"setRowDetails\"\n (rowSelect)=\"getRowClicked($event)\" [searchOff]=\"false\" [startLimit]=\"2\" [endLimit]=\"20\" [setRows]=\"setRows()\">\n</app-ngx-table> \n </div>\n \n<div class=\"buttonButtom\">\n    <app-basic-button id=\"aboard2\" *ngIf=\"!tableClickable\" [btnText]=\"'Zurück'\" [btnColor]=\"'colorGrey'\"\n        (clickFunction)=\"generateFirstInput()\"></app-basic-button>\n    <app-basic-button id=\"aboard\" *ngIf=\"!tableClickable\" [btnText]=\"'Download'\" [btnColor]=\"'colorGreen'\"(clickFunction)=\"rowsToExcel()\"\n       ></app-basic-button> \n</div>\n","import { NgxMatDateFormats } from '@angular-material-components/datetime-picker';\nimport { Component, Input, OnInit, Output, ViewChild, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport * as moment from 'moment';\n\n\n@Component({\n  selector: 'app-ngx-date-time-picker',\n  templateUrl: './ngx-date-time-picker.component.html',\n  styleUrls: ['./ngx-date-time-picker.component.scss']\n})\nexport class NgxDateTimePickerComponent implements OnInit {\n\n\n  @ViewChild('picker') picker: any;\n\n  @Input() outlined: string = \"outline\";\n\n  @Input() minutesStep: string = \"half\"; //could set half or quater\n\n  @Input() placeHolder: string = \"placeholder\";\n\n  @Input() set colorPicker(color: string) {\n    switch (color) {\n      case 'white': this.inputClass = \"inputWhite\"; this.pickButtonClass = \"pickButtonWhite\"; break;\n      default: this.inputClass = \"inputDefault\"; this.pickButtonClass = \"pickButtonDefault\"; break;\n    }\n  };\n\n  inputClass: string = \"\"; //toggles the color for the input field\n  pickButtonClass: string = \"\"; //toggles the color for the pick button \n\n  @Input() setTouchUi: boolean = true;\n\n  @Output() getDateTime: EventEmitter<any> = new EventEmitter();\n\n  public date: moment.Moment;\n  public disabled = false;\n  public showSpinners = true;\n  public showSeconds = false;\n  public touchUi = this.setTouchUi; // the display outlined in the view\n  public enableMeridian = false; //am pm\n  public minDate: moment.Moment;\n  public maxDate: moment.Moment;\n  public stepHour = 1;\n  public stepMinute = 30;\n  public stepSecond = 1;\n  public color: ThemePalette = 'primary'; //'primary', 'accent', 'warn'\n\n  initialisation: boolean = true;\n  makeNewDateReminder: any;\n\n  public formGroup = new FormGroup({\n    date: new FormControl(null, [Validators.required]),\n    date2: new FormControl(null, [Validators.required])\n  })\n\n  setPickerValue: any; //set the value after reform\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.switchBetweenStepsMinutes();\n  }\n\n  /**\n   * swift between minutesStep and set the selected input\n   * default set half hour steps\n   * initialisated the time in the input field and push it in the output\n   * @input minutesStep\n   */\n  public switchBetweenStepsMinutes() {\n    switch (this.minutesStep) {\n      case 'none': this.dateControl = new FormControl(new Date()); this.stepMinute = 1; break;\n      case 'half': this.dateControl = new FormControl(this.minutesHalfHourSteps(new Date())); if (this.initialisation) { this.initialisationTime(new Date()) }; this.stepMinute = 30; break;\n      case 'quater': this.dateControl = new FormControl(this.minutesQuaterHourSteps(new Date())); this.stepMinute = 15; break;\n      default: this.dateControl = new FormControl(new Date()); if (this.initialisation) { this.initialisationTime(new Date()) }; this.stepMinute = 1; break;\n    }\n  }\n\n  /**\n   * reform the get time and set the value for the visible field \n   * none dont form\n   * @param event \n   */\n  getTime(event: any) {\n\n    switch (this.minutesStep) {\n      case 'none': this.rebuildGetTime((event)); break;\n      case 'half': this.rebuildGetTime(this.minutesHalfHourSteps(event)); break;\n      case 'quater': this.rebuildGetTime(this.minutesQuaterHourSteps(event)); break;\n      default: this.rebuildGetTime(this.minutesQuaterHourSteps(event)); break;\n    }\n  }\n\n  public dateControl;  //2021,9,4,5,0,0\n  public dateControlMinMax = new FormControl(new Date());\n\n\n  /**\n   * if minutes are higher than 15 small than 45 return 30\n   * if minutes are higher than 45 small than 15 return 0\n   * @param return minutes\n   */\n  public minutesHalfHourSteps(makeNewDate: any) {\n\n    if (this.initialisation) {\n      this.makeNewDateReminder = makeNewDate;\n    }\n\n    var minutes = moment(makeNewDate).minute();\n\n    if (minutes > 15 && minutes < 45) {\n      minutes = 30;\n    } else {\n      minutes = 0;\n    }\n\n    this.makeNewDateReminder.setMinutes(minutes);\n    this.makeNewDateReminder.setSeconds(0);\n\n    //on init give the initialisated date to the output\n    if (this.initialisation) {\n      this.initialisationTime(makeNewDate)\n    }\n\n    let reformMoment = moment(makeNewDate).toISOString(true);\n\n    return reformMoment;\n  }\n\n  /**\n   * if minutes are higher than 0 small than 15 return 0 so on\n   * @param return minutes\n   */\n  public minutesQuaterHourSteps(makeNewDate) {\n    var minutes = moment(makeNewDate).minute();\n\n\n    if (minutes > 0 && minutes < 15) {\n      minutes = 0;\n    }\n    if (minutes > 15 && minutes < 30) {\n      minutes = 15;\n    }\n    if (minutes > 30 && minutes < 45) {\n      minutes = 30;\n    }\n    if (minutes > 45 && minutes < 59) {\n      minutes = 45;\n    } else {\n      minutes = minutes;\n    }\n\n    makeNewDate.setMinutes(minutes);\n    makeNewDate.setSeconds(0);\n\n    //on init give the initialisated date to the output\n    if (this.initialisation) {\n      this.initialisationTime(makeNewDate)\n    }\n\n    return makeNewDate;\n  }\n\n  initialisationTime(date: any) {\n    this.getDateTime.emit(date);\n    this.initialisation = false;\n  }\n\n  /**\n    * set the reformed date to the value prop in the datepicker\n    * build the output and visible value\n    * @param date \n    */\n  rebuildGetTime(date: any) {\n    this.getDateTime.emit(date);\n    this.setPickerValue = date;\n  }\n\n  onResize(event) {\n    this.proveSize(event.target.innerWidth)\n  }\n\n  //if window is smaller than 1000px the touchUI (popup) is false\n  proveSize(getWidth) {\n    if (getWidth < 1000) {\n      this.setTouchUi = false;\n\n    } else {\n      this.setTouchUi = true;\n    }\n  }\n}\n\n\n","\n  <mat-form-field class=\"timePicker\" appearance={{outlined}}>\n\n    <mat-label class={{inputClass}} >{{placeHolder}}</mat-label> \n    <input matInput \n     [ngxMatDatetimePicker]=\"picker\" \n     class=\"input\"\n     class={{inputClass}} \n     readonly\n     [value]=\"setPickerValue\" \n     (ngModelChange)=\"getTime($event)\"\n     placeholder={{placeHolder}}\n     [formControl]=\"dateControl\"\n     [min]=\"minDate\" [max]=\"maxDate\"\n     [attr.disabled]=\"disabled\"\n     >\n\n    <mat-datepicker-toggle \n    [aria-label]=\"placeHolder\"\n    class={{pickButtonClass}} \n    matSuffix\n    [for]=\"picker\"\n     >\n    </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #picker \n    role='dialog'\n     \n      [showSpinners]=\"showSpinners\" \n      [showSeconds]=\"disabled\"\n      [stepHour]=\"stepHour\" \n      [stepMinute]=\"stepMinute\" \n      [stepSecond]=\"stepSecond\"\n      [touchUi]=\"setTouchUi\"\n      [color]=\"color\"\n      >\n    </ngx-mat-datetime-picker>\n  </mat-form-field>\n\n  <div (window:resize)=\"onResize($event)\"></div>\n\n  ","import { TimeServiceService } from './time-service.service';\nimport { Injectable } from '@angular/core';\nimport { Workbook } from 'exceljs'; //in tsConfig.json import path:excelJs and => npm install --save exceljs@1.12.0\nimport * as fs from 'file-saver'; //npm install file-saver --save\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateExcelService {\n\n  constructor(private timeService: TimeServiceService) { }\n\n  //needs the header and body as a array \n  generateExcel(getHeader: any, getBody: any) {\n\n    //Excel Title, Header, Data\n    const title = 'Stundenblatt';\n    const header = getHeader;\n\n    const data = getBody//getBody;\n\n    //Create workbook and worksheet\n    let workbook = new Workbook();\n    let worksheet = workbook.addWorksheet('HourSheet Data');\n   \n    //Add Row and formatting\n    let titleRow = worksheet.addRow([title]);\n    \n    titleRow.font = { name: 'Arial', family: 4, size: 16, underline: 'double', bold: true }\n    \n    //space between title and content\n    worksheet.addRow([]);\n    worksheet.addRow([]);\n\n    worksheet.mergeCells('A1:C2');\n    \n    //Blank Row \n    worksheet.addRow([]);\n    //Add Header Row\n    let headerRow = worksheet.addRow(header);\n\n    // Cell Style : Fill and Border\n    headerRow.eachCell((cell, number) => {\n      cell.fill = {\n        type: 'pattern',\n        pattern: 'solid',\n        fgColor: { argb: 'FFFFFF00' },\n        bgColor: { argb: 'FF0000FF' }\n      }\n      cell.border = { top: { style: 'thin' }, left: { style: 'thin' }, bottom: { style: 'thin' }, right: { style: 'thin' } }\n    })\n\n    worksheet.addRows(data);\n\n    worksheet.addRow([]);\n\n    //Generate Excel File with given name\n    workbook.xlsx.writeBuffer().then((data) => {\n      let blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n      fs.saveAs(blob, `Stundenblatt-${this.timeService.getActualDate()}.xlsx`);\n    })\n\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}